/*
 * SettingsDialog.java
 *
 * Created on April 28, 2009, 8:28 AM
 */

package hanzitrainer;

import java.util.prefs.Preferences;

/**
 *
 * @author  matthieu
 */
public class SettingsDialog extends javax.swing.JDialog {

    
    /** Creates new form SettingsDialog */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        Preferences my_preferences;
        int randomness;
        String cedictFile;
        
        initComponents();
        
        my_preferences = Preferences.userNodeForPackage(HanziTrainerApp.class);
        randomness = my_preferences.getInt("randomness :", 50);
        RandomPickerSlider.setValue(randomness);
        RandomPickerValueLabel.setText(Integer.toString(randomness));  
        
        cedictFile = my_preferences.get("cedict file :", "");
        CedictFileField.setText(cedictFile);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SettingsTitleLabel = new javax.swing.JLabel();
        RandomPickerLabel = new javax.swing.JLabel();
        RandomPickerSlider = new javax.swing.JSlider();
        RandomPickerValueLabel = new javax.swing.JLabel();
        CedictFileLabel = new javax.swing.JLabel();
        CedictFileField = new javax.swing.JTextField();
        CedictFileBrowseButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hanzitrainer.HanziTrainerApp.class).getContext().getResourceMap(SettingsDialog.class);
        SettingsTitleLabel.setText(resourceMap.getString("SettingsTitleLabel.text")); // NOI18N
        SettingsTitleLabel.setName("SettingsTitleLabel"); // NOI18N

        RandomPickerLabel.setText(resourceMap.getString("RandomPickerLabel.text")); // NOI18N
        RandomPickerLabel.setName("RandomPickerLabel"); // NOI18N

        RandomPickerSlider.setMinimum(5);
        RandomPickerSlider.setName("RandomPickerSlider"); // NOI18N
        RandomPickerSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                RandomPickerSliderMouseDragged(evt);
            }
        });

        RandomPickerValueLabel.setText(resourceMap.getString("RandomPickerValueLabel.text")); // NOI18N
        RandomPickerValueLabel.setName("RandomPickerValueLabel"); // NOI18N

        CedictFileLabel.setText(resourceMap.getString("CedictFileLabel.text")); // NOI18N
        CedictFileLabel.setName("CedictFileLabel"); // NOI18N

        CedictFileField.setText(resourceMap.getString("CedictFileField.text")); // NOI18N
        CedictFileField.setName("CedictFileField"); // NOI18N
        CedictFileField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedictFileFieldActionPerformed(evt);
            }
        });

        CedictFileBrowseButton.setText(resourceMap.getString("CedictFileBrowseButton.text")); // NOI18N
        CedictFileBrowseButton.setName("CedictFileBrowseButton"); // NOI18N

        OKButton.setText(resourceMap.getString("OKButton.text")); // NOI18N
        OKButton.setName("OKButton"); // NOI18N
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CedictFileLabel)
                            .addComponent(RandomPickerLabel))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CedictFileField))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(RandomPickerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RandomPickerValueLabel))
                                    .addComponent(CedictFileBrowseButton))
                                .addGap(4, 4, 4))))
                    .addComponent(SettingsTitleLabel))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(266, Short.MAX_VALUE)
                .addComponent(OKButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SettingsTitleLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RandomPickerValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RandomPickerSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RandomPickerLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedictFileLabel)
                    .addComponent(CedictFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CedictFileBrowseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(OKButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
    Preferences my_preferences;
    int value = RandomPickerSlider.getValue();
    String cedictFile;
    
    RandomPickerValueLabel.setText(Integer.toString(value));
    my_preferences = Preferences.userNodeForPackage(HanziTrainerApp.class);
    my_preferences.put("randomness :", Integer.toString(value));
    
    cedictFile = CedictFileField.getText();
    my_preferences.put("cedict file :", cedictFile);



    this.setVisible(false);
}//GEN-LAST:event_OKButtonActionPerformed

private void CedictFileFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedictFileFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CedictFileFieldActionPerformed

private void RandomPickerSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RandomPickerSliderMouseDragged
    int value = RandomPickerSlider.getValue();
    RandomPickerValueLabel.setText(Integer.toString(value));
}//GEN-LAST:event_RandomPickerSliderMouseDragged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CedictFileBrowseButton;
    private javax.swing.JTextField CedictFileField;
    private javax.swing.JLabel CedictFileLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JLabel RandomPickerLabel;
    private javax.swing.JSlider RandomPickerSlider;
    private javax.swing.JLabel RandomPickerValueLabel;
    private javax.swing.JLabel SettingsTitleLabel;
    // End of variables declaration//GEN-END:variables

    public static double random_low() {
        Preferences my_preferences;
        int randomness;
        double x = Math.random();

        my_preferences = Preferences.userNodeForPackage(HanziTrainerApp.class);
        randomness = my_preferences.getInt("randomness :", 100);

        return x * randomness / 100;
    }
}
