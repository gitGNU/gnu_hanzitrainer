/*
 * SettingsDialog.java
 *
 * HanziTrainer to help you learn Mandarin
 * Copyright (c) 2008, Matthieu Jeanson ( matthieu.jeanson[at]gmail.com )
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * The name its contributors may not be used to endorse or promote
 *       products derived from this software without specific prior written
 *       permission.
 *
 * THIS SOFTWARE IS PROVIDED BY MATTHIEU JEANSON ''AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL MATTHIEU JEANSON BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package hanzitrainer;

import java.awt.Frame;
import java.io.File;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;

/**
 *
 * @author  matthieu
 */
public class SettingsDialog extends javax.swing.JDialog
{

    /** Creates new form SettingsDialog */
    public SettingsDialog(java.awt.Frame parent, HanziApplicationUpdater to_update, CedictParser cedict)
    {
        super(parent, false);

        updater = to_update;

        initComponents();

        font_panel = new hanzitrainer.settings.FontPanel(updater);
        tabs.addTab("Fonts", font_panel);
        cedict_panel = new hanzitrainer.settings.CedictPanel(cedict);
        tabs.addTab("Cedict", cedict_panel);

        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabs.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup()
                .addComponent(tabs)
                );
        mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup()
                .addComponent(tabs)
                );

        pack();
    }

    private HanziApplicationUpdater updater;

    private javax.swing.JTabbedPane tabs;
    private hanzitrainer.settings.FontPanel font_panel;
    private hanzitrainer.settings.CedictPanel cedict_panel;

    public static double random_low()
    {
        Preferences my_preferences;
        int randomness;
        double x = Math.random();

        my_preferences = Preferences.userNodeForPackage(HanziTrainerApp.class);
        randomness = my_preferences.getInt("randomness :", 100);

        return x * randomness / 100;
    }
}
