/*
 * HanziTrainer to help you learn Mandarin
 * Copyright (c) 2008, Matthieu Jeanson ( matthieu.jeanson[at]gmail.com )
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * The name its contributors may not be used to endorse or promote
 *       products derived from this software without specific prior written
 *       permission.
 *
 * THIS SOFTWARE IS PROVIDED BY MATTHIEU JEANSON ''AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL MATTHIEU JEANSON BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package hanzitrainer;



/**
 *
 * @author  matthieu
 */
public class CharacterDatabasePanel extends javax.swing.JPanel {

    /** Creates new form CharacterDatabasePanel
     * @param database The database to get the information from
     * @param updater The top level application which can link to the character review panel (if any)
     */
    public CharacterDatabasePanel(HanziDBscore database, HanziApplicationUpdater updater)
    {
        main_database = database;
        parent_app = updater;
        initComponents();
        CharDatabaseUpdateDB();
    }

    /**
     *
     */
    public void CharDatabaseUpdateDB()
    {
        int res;
        CTableFiller.database_updated();

        res = main_database.get_number_characters();
        numCharLabel.setText("Number of characters : " + res);
        res = main_database.get_average_character_score();
        avgCharScoreLabel.setText("Average score : " + res);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    private void initComponents() {

        numCharLabel = new javax.swing.JLabel();
        DBScroll = new javax.swing.JScrollPane();
        CharDBTable = new javax.swing.JTable();
        CTableFiller = new CDBTableFiller(main_database);
        avgCharScoreLabel = new javax.swing.JLabel();

        setName("Form");

        numCharLabel.setName("numCharLabel");

        DBScroll.setName("DBScroll");

        CharDBTable.setAutoCreateRowSorter(true);
        CharDBTable.setModel(CTableFiller);
        CharDBTable.setName("CharDBTable");
        CharDBTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                charDBmouseClicked(evt);
            }
        });
        DBScroll.setViewportView(CharDBTable);

        avgCharScoreLabel.setName("avgCharScoreLabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addComponent(numCharLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(avgCharScoreLabel))
                .addComponent(DBScroll)
                );
        layout.setVerticalGroup(
            layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numCharLabel)
                    .addComponent(avgCharScoreLabel))
                .addComponent(DBScroll)
                );
    }

    private void charDBmouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }
    
    private javax.swing.JTable CharDBTable;
    private javax.swing.JScrollPane DBScroll;
    private javax.swing.JLabel avgCharScoreLabel;
    private javax.swing.JLabel numCharLabel;
    private CDBTableFiller CTableFiller;
    private HanziDBscore main_database;
    private HanziApplicationUpdater parent_app;
}
