/*
 * VocabularyBuilderPanel.java
 *
 * Created on April 23, 2009, 2:24 AM
 */

package hanzitrainer;

import java.util.Locale;
import java.util.ArrayList;

/**
 *
 * @author  matthieu
 */
public class VocabularyBuilderPanel extends javax.swing.JPanel {

    /** Creates new form VocabularyBuilderPanel */
    public VocabularyBuilderPanel(HanziDB database, HanziApplicationUpdater updater) {
        main_database = database;
        parent_app = updater;
        initComponents();
    }
    
    public void VocabularyBuilderUpdateDB()
    {
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChineseLabel = new javax.swing.JLabel();
        PinyinLabel = new javax.swing.JLabel();
        EnglishLabel = new javax.swing.JLabel();
        ChineseTextField = new javax.swing.JTextField();
        EnglishTextField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        PinyinScroll = new javax.swing.JScrollPane();
        EnglishTranslations = new javax.swing.JComboBox();
        AddNewWordButton = new javax.swing.JRadioButton();
        EditWordButton = new javax.swing.JRadioButton();
        DeleteWordButton = new javax.swing.JRadioButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hanzitrainer.HanziTrainerApp.class).getContext().getResourceMap(VocabularyBuilderPanel.class);
        ChineseLabel.setText(resourceMap.getString("ChineseLabel.text")); // NOI18N
        ChineseLabel.setName("ChineseLabel"); // NOI18N

        PinyinLabel.setText(resourceMap.getString("PinyinLabel.text")); // NOI18N
        PinyinLabel.setName("PinyinLabel"); // NOI18N

        EnglishLabel.setText(resourceMap.getString("EnglishLabel.text")); // NOI18N
        EnglishLabel.setName("EnglishLabel"); // NOI18N

        ChineseTextField.setName("ChineseTextField"); // NOI18N
        PinyinChooser = new PinyinChooserFrame(PinyinScroll,main_database);
        this.ChineseTextField.getDocument().addDocumentListener(PinyinChooser);
        ChineseTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ChineseTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ChineseTextFieldFocusLost(evt);
            }
        });

        EnglishTextField.setName("EnglishTextField"); // NOI18N
        EnglishTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnglishTextFieldSaveButtonActionPerformed(evt);
            }
        });

        SaveButton.setText(resourceMap.getString("SaveButton.text")); // NOI18N
        SaveButton.setName("SaveButton"); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        ResetButton.setText(resourceMap.getString("ResetButton.text")); // NOI18N
        ResetButton.setDefaultCapable(false);
        ResetButton.setName("ResetButton"); // NOI18N
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        PinyinScroll.setName("PinyinScroll"); // NOI18N

        EnglishTranslations.setEnabled(false);
        EnglishTranslations.setName("EnglishTranslations"); // NOI18N

        AddNewWordButton.setText(resourceMap.getString("AddNewWordButton.text")); // NOI18N
        AddNewWordButton.setEnabled(false);
        AddNewWordButton.setName("AddNewWordButton"); // NOI18N

        EditWordButton.setText(resourceMap.getString("EditWordButton.text")); // NOI18N
        EditWordButton.setEnabled(false);
        EditWordButton.setName("EditWordButton"); // NOI18N

        DeleteWordButton.setText(resourceMap.getString("DeleteWordButton.text")); // NOI18N
        DeleteWordButton.setEnabled(false);
        DeleteWordButton.setName("DeleteWordButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PinyinLabel)
                    .addComponent(ChineseLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EnglishLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(ResetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EnglishTranslations, javax.swing.GroupLayout.Alignment.TRAILING, 0, 336, Short.MAX_VALUE)
                            .addComponent(EnglishTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditWordButton)
                            .addComponent(AddNewWordButton)
                            .addComponent(DeleteWordButton))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ChineseTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                            .addComponent(PinyinScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE))
                        .addGap(8, 8, 8))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChineseLabel)
                    .addComponent(ChineseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PinyinLabel)
                    .addComponent(PinyinScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EnglishLabel)
                            .addComponent(EnglishTranslations, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EnglishTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ResetButton)
                            .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddNewWordButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditWordButton)
                        .addGap(3, 3, 3)
                        .addComponent(DeleteWordButton)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


private void ChineseTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChineseTextFieldFocusGained
// TODO add your handling code here:
    ChineseTextField.getInputContext().selectInputMethod(Locale.CHINA);

    EnglishTranslations.removeAllItems();
    EnglishTranslations.setEnabled(false);
    AddNewWordButton.setEnabled(false);
    EditWordButton.setEnabled(false);
    DeleteWordButton.setEnabled(false);
    AddNewWordButton.setSelected(false);
    EditWordButton.setSelected(false);
    DeleteWordButton.setSelected(false);
}//GEN-LAST:event_ChineseTextFieldFocusGained


private void ChineseTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ChineseTextFieldFocusLost
// TODO add your handling code here:
    String hanzi_string = ChineseTextField.getText();
    ArrayList<String> translations = new ArrayList<String>();
    int i;

    ChineseTextField.getInputContext().selectInputMethod(Locale.getDefault());

    translations = main_database.get_chinese_word_translation(hanzi_string);
    if (translations.size() == 0)
    {
        return;
    }
    EnglishTranslations.addItem("[new]");
    for (i = 0; i < translations.size(); i++)
    {
        EnglishTranslations.addItem(translations.get(i));
    }
    EnglishTranslations.setEnabled(true);
    AddNewWordButton.setEnabled(true);
    EditWordButton.setEnabled(true);
    DeleteWordButton.setEnabled(true);
    AddNewWordButton.setSelected(true);
}//GEN-LAST:event_ChineseTextFieldFocusLost


private void EnglishTextFieldSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnglishTextFieldSaveButtonActionPerformed
// TODO add your handling code here:
    String english = EnglishTextField.getText();
    ArrayList<String> pinyin = PinyinChooser.get_pinyins();
    String hanzi_string = ChineseTextField.getText();
    ArrayList<String> hanzi = new ArrayList<String>();
    int i;

    for (i = 0; i < pinyin.size(); i++)
    {
        if (!Pinyin.verify_pinyin(pinyin.get(i)))
        {
            return;
        }
    }
    for (i = 0; i < hanzi_string.codePointCount(0, hanzi_string.length()); i++)
    {
        int from;
        int to;
        from = hanzi_string.offsetByCodePoints(0, i);
        if (i == hanzi_string.codePointCount(0, hanzi_string.length()) - 1)
        {
            to = hanzi_string.length();
        }
        else
        {
            to = hanzi_string.offsetByCodePoints(0, i + 1);
        }
        hanzi.add(hanzi_string.substring(from, to));
    }
    if ((!AddNewWordButton.isEnabled()) || (AddNewWordButton.isSelected()))
    {
        if (english.length() == 0)
        {
            return;
        }
        main_database.add_translation(english, pinyin, hanzi);
    }
    else
    {
        if (DeleteWordButton.isSelected())
        {
            if (EnglishTranslations.getSelectedIndex() == 0)
            {
                return;
            }
            main_database.delete_translation((String) EnglishTranslations.getSelectedItem(), hanzi);
        }
        else
        {
            if (EditWordButton.isSelected())
            {
                if (EnglishTranslations.getSelectedIndex() == 0)
                {
                    return;
                }
                if (english.length() == 0)
                {
                    return;
                }
                main_database.delete_translation((String) EnglishTranslations.getSelectedItem(), hanzi);
                main_database.add_translation(english, pinyin, hanzi);
            }
        }
    }

    parent_app.update_database();

    EnglishTranslations.removeAllItems();
    ChineseTextField.setText("");
    EnglishTextField.setText("");
    ChineseTextField.requestFocus();
}//GEN-LAST:event_EnglishTextFieldSaveButtonActionPerformed

private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
// TODO add your handling code here:
    String english = EnglishTextField.getText();
    ArrayList<String> pinyin = PinyinChooser.get_pinyins();
    String hanzi_string = ChineseTextField.getText();
    ArrayList<String> hanzi = new ArrayList<String>();
    int i;

    for (i = 0; i < pinyin.size(); i++)
    {
        if (!Pinyin.verify_pinyin(pinyin.get(i)))
        {
            return;
        }
    }
    for (i = 0; i < hanzi_string.codePointCount(0, hanzi_string.length()); i++)
    {
        int from;
        int to;
        from = hanzi_string.offsetByCodePoints(0, i);
        if (i == hanzi_string.codePointCount(0, hanzi_string.length()) - 1)
        {
            to = hanzi_string.length();
        }
        else
        {
            to = hanzi_string.offsetByCodePoints(0, i + 1);
        }
        hanzi.add(hanzi_string.substring(from, to));
    }
    if ((!AddNewWordButton.isEnabled()) || (AddNewWordButton.isSelected()))
    {
        if (english.length() == 0)
        {
            return;
        }
        main_database.add_translation(english, pinyin, hanzi);
    }
    else
    {
        if (DeleteWordButton.isSelected())
        {
            if (EnglishTranslations.getSelectedIndex() == 0)
            {
                return;
            }
            main_database.delete_translation((String) EnglishTranslations.getSelectedItem(), hanzi);
        }
        else
        {
            if (EditWordButton.isSelected())
            {
                if (EnglishTranslations.getSelectedIndex() == 0)
                {
                    return;
                }
                if (english.length() == 0)
                {
                    return;
                }
                main_database.delete_translation((String) EnglishTranslations.getSelectedItem(), hanzi);
                main_database.add_translation(english, pinyin, hanzi);
            }
        }
    }

    parent_app.update_database();

    EnglishTranslations.removeAllItems();
    ChineseTextField.setText("");
    EnglishTextField.setText("");
    ChineseTextField.requestFocus();

}//GEN-LAST:event_SaveButtonActionPerformed


private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
// TODO add your handling code here:
    ChineseTextField.setText("");
    EnglishTextField.setText("");
}//GEN-LAST:event_ResetButtonActionPerformed

    public void edit_word(String to_edit)
    {
        ChineseTextField.setText(to_edit);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AddNewWordButton;
    private javax.swing.JLabel ChineseLabel;
    private javax.swing.JTextField ChineseTextField;
    private javax.swing.JRadioButton DeleteWordButton;
    private javax.swing.JRadioButton EditWordButton;
    private javax.swing.JLabel EnglishLabel;
    private javax.swing.JTextField EnglishTextField;
    private javax.swing.JComboBox EnglishTranslations;
    private javax.swing.JLabel PinyinLabel;
    private javax.swing.JScrollPane PinyinScroll;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton SaveButton;
    // End of variables declaration//GEN-END:variables
    private HanziDB main_database;
    private HanziApplicationUpdater parent_app;
    private PinyinChooserFrame PinyinChooser;
}
