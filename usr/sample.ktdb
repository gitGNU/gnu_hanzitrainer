SET CLUSTER '';
SET DEFAULT_TABLE_TYPE 0;      
SET WRITE_DELAY 500;           
SET DEFAULT_LOCK_TIMEOUT 1000; 
SET CACHE_SIZE 16384;          
;              
CREATE USER IF NOT EXISTS SA SALT 'a33559998a3ad5f7' HASH '81c98393f699b1d7230d5d40db29cc6931dfd82eb279b7435ae46566f2fda50d' ADMIN;            
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_C13F432C_0F70_4565_8E9C_535FE4824433 START WITH 548 BELONGS_TO_TABLE;   
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_3633ED31_F013_4EC3_AC8B_CF465C7B686B START WITH 455 BELONGS_TO_TABLE;   
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_950EAB2B_F27E_478F_9CF9_4EDEAD4379FA START WITH 480 BELONGS_TO_TABLE;   
CREATE MEMORY TABLE PUBLIC.DATABASE_INFO(
    FIELD VARCHAR(50),
    VALUE VARCHAR(50)
);      
-- 3 +/- SELECT COUNT(*) FROM PUBLIC.DATABASE_INFO;            
INSERT INTO PUBLIC.DATABASE_INFO(FIELD, VALUE) VALUES
('version', '6'),
('minimum_prog_version', '0.0'),
('score_db_version', '3');            
CREATE MEMORY TABLE PUBLIC.CWORD_PINYIN_BRIDGE(
    CWORD_ID INTEGER,
    CHARACTER_PINYIN_ID INTEGER,
    POS INTEGER,
    NOTONE BOOLEAN
);  
-- 795 +/- SELECT COUNT(*) FROM PUBLIC.CWORD_PINYIN_BRIDGE;    
INSERT INTO PUBLIC.CWORD_PINYIN_BRIDGE(CWORD_ID, CHARACTER_PINYIN_ID, POS, NOTONE) VALUES
(1, 1, 0, FALSE),
(1, 2, 1, FALSE),
(2, 1, 0, FALSE),
(3, 2, 0, FALSE),
(4, 3, 0, FALSE),
(5, 4, 0, TRUE),
(6, 5, 0, FALSE),
(7, 6, 0, TRUE),
(8, 7, 0, FALSE),
(9, 8, 0, FALSE),
(10, 9, 0, FALSE),
(10, 10, 1, TRUE),
(11, 11, 0, FALSE),
(11, 12, 1, TRUE),
(12, 13, 0, FALSE),
(13, 13, 0, FALSE),
(13, 14, 1, TRUE),
(14, 3, 0, FALSE),
(14, 14, 1, TRUE),
(15, 1, 0, FALSE),
(15, 14, 1, TRUE),
(16, 15, 0, FALSE),
(17, 16, 0, FALSE),
(18, 17, 0, FALSE),
(19, 18, 0, FALSE),
(19, 19, 1, TRUE),
(20, 20, 0, FALSE),
(20, 21, 1, TRUE),
(21, 22, 0, FALSE),
(22, 23, 0, FALSE),
(22, 24, 1, FALSE),
(23, 25, 0, FALSE),
(23, 26, 1, TRUE),
(24, 27, 0, FALSE),
(25, 28, 0, FALSE),
(26, 29, 0, FALSE),
(27, 30, 0, FALSE),
(28, 31, 0, FALSE),
(29, 32, 0, FALSE),
(30, 33, 0, FALSE),
(31, 34, 0, FALSE),
(32, 35, 0, FALSE),
(32, 36, 1, FALSE),
(33, 37, 0, FALSE),
(33, 31, 1, FALSE),
(34, 38, 0, FALSE),
(35, 39, 0, FALSE),
(36, 40, 0, FALSE),
(36, 41, 1, FALSE),
(37, 42, 0, FALSE),
(37, 43, 1, FALSE),
(38, 44, 0, FALSE),
(38, 45, 1, TRUE),
(39, 40, 0, FALSE),
(39, 46, 1, FALSE),
(40, 47, 0, FALSE),
(40, 48, 1, TRUE),
(41, 49, 0, FALSE),
(41, 50, 1, FALSE),
(42, 51, 0, FALSE),
(42, 52, 1, FALSE),
(43, 53, 0, FALSE),
(44, 54, 0, FALSE),
(45, 53, 0, FALSE),
(45, 54, 1, FALSE),
(46, 55, 0, FALSE),
(47, 56, 0, FALSE),
(47, 57, 1, FALSE),
(48, 58, 0, FALSE),
(49, 59, 0, FALSE),
(50, 60, 0, FALSE),
(50, 59, 1, FALSE),
(51, 55, 0, FALSE),
(51, 58, 1, FALSE),
(219, 241, 0, FALSE),
(53, 62, 0, FALSE),
(53, 43, 1, FALSE),
(54, 41, 0, FALSE),
(54, 63, 1, FALSE),
(55, 64, 0, FALSE),
(55, 65, 1, FALSE),
(56, 66, 0, TRUE),
(57, 64, 0, FALSE),
(57, 43, 1, FALSE),
(58, 67, 0, FALSE),
(58, 68, 1, TRUE),
(59, 64, 0, FALSE),
(59, 69, 1, TRUE),
(60, 70, 0, FALSE),
(60, 41, 1, FALSE),
(61, 71, 0, FALSE),
(61, 31, 1, FALSE),
(62, 72, 0, FALSE),
(62, 73, 1, FALSE),
(62, 74, 2, FALSE),
(63, 75, 0, FALSE),
(63, 31, 1, FALSE),
(64, 76, 0, FALSE),
(64, 77, 1, FALSE),
(65, 78, 0, FALSE),
(66, 30, 0, FALSE),
(66, 79, 1, TRUE),
(67, 80, 0, FALSE),
(67, 81, 1, FALSE),
(68, 82, 0, FALSE),
(69, 83, 0, FALSE),
(70, 84, 0, FALSE),
(70, 85, 1, TRUE),
(71, 86, 0, FALSE),
(71, 16, 1, FALSE),
(71, 87, 2, FALSE),
(72, 88, 0, FALSE),
(72, 89, 1, FALSE),
(72, 90, 2, TRUE),
(74, 92, 0, FALSE),
(74, 93, 1, FALSE),
(75, 92, 0, FALSE),
(76, 94, 0, FALSE),
(76, 95, 1, FALSE),
(77, 96, 0, FALSE),
(78, 97, 0, FALSE),
(79, 98, 0, FALSE),
(80, 99, 0, FALSE),
(81, 16, 0, FALSE),
(81, 100, 1, FALSE),
(82, 39, 0, FALSE),
(82, 79, 1, TRUE),
(83, 101, 0, FALSE),
(84, 102, 0, TRUE),
(85, 103, 0, FALSE),
(86, 104, 0, FALSE),
(87, 105, 0, FALSE),
(88, 106, 0, FALSE),
(88, 107, 1, FALSE),
(89, 108, 0, FALSE),
(90, 109, 0, FALSE),
(91, 95, 0, FALSE),
(91, 95, 1, FALSE),
(140, 163, 0, FALSE),
(93, 111, 0, FALSE),
(94, 112, 0, FALSE),
(94, 113, 1, FALSE),
(95, 114, 0, FALSE),
(95, 115, 1, TRUE),
(96, 94, 0, FALSE),
(97, 116, 0, FALSE),
(98, 117, 0, FALSE),
(99, 118, 0, FALSE),
(99, 119, 1, FALSE),
(100, 120, 0, FALSE),
(101, 51, 0, FALSE),
(101, 121, 1, FALSE),
(102, 121, 0, FALSE),
(103, 122, 0, FALSE),
(104, 123, 0, FALSE),
(104, 124, 1, FALSE),
(105, 74, 0, FALSE),
(106, 125, 0, FALSE),
(106, 126, 1, TRUE),
(107, 125, 0, FALSE),
(108, 127, 0, FALSE),
(288, 40, 0, FALSE),
(110, 41, 0, FALSE),
(111, 40, 0, FALSE),
(111, 31, 1, FALSE),
(112, 128, 0, FALSE),
(113, 129, 0, FALSE),
(113, 130, 1, FALSE),
(114, 99, 0, FALSE),
(114, 131, 1, FALSE),
(115, 132, 0, FALSE),
(116, 133, 0, FALSE),
(116, 134, 1, FALSE),
(116, 135, 2, FALSE),
(117, 136, 0, FALSE),
(117, 137, 1, FALSE),
(118, 138, 0, FALSE),
(119, 136, 0, FALSE),
(119, 137, 1, FALSE),
(119, 138, 2, FALSE),
(120, 139, 0, FALSE),
(120, 135, 1, FALSE),
(139, 135, 3, FALSE),
(139, 139, 2, FALSE),
(139, 113, 1, FALSE),
(139, 162, 0, FALSE),
(122, 139, 0, FALSE),
(122, 135, 1, FALSE),
(122, 138, 2, FALSE),
(123, 141, 0, FALSE),
(123, 135, 1, FALSE),
(124, 142, 0, FALSE),
(124, 130, 1, FALSE),
(125, 130, 0, FALSE),
(125, 143, 1, FALSE),
(126, 144, 0, FALSE),
(126, 145, 1, FALSE),
(126, 135, 2, FALSE);         
INSERT INTO PUBLIC.CWORD_PINYIN_BRIDGE(CWORD_ID, CHARACTER_PINYIN_ID, POS, NOTONE) VALUES
(127, 146, 0, FALSE),
(128, 147, 0, FALSE),
(128, 148, 1, FALSE),
(129, 149, 0, FALSE),
(130, 150, 0, FALSE),
(131, 151, 0, FALSE),
(131, 152, 1, FALSE),
(132, 153, 0, FALSE),
(133, 154, 0, FALSE),
(134, 155, 0, FALSE),
(135, 156, 0, FALSE),
(136, 94, 0, FALSE),
(136, 157, 1, FALSE),
(138, 161, 1, FALSE),
(138, 160, 0, FALSE),
(141, 164, 0, FALSE),
(141, 165, 1, FALSE),
(142, 165, 0, FALSE),
(143, 166, 0, FALSE),
(144, 167, 0, FALSE),
(145, 168, 0, FALSE),
(145, 169, 1, FALSE),
(146, 170, 0, FALSE),
(146, 171, 1, FALSE),
(147, 170, 0, FALSE),
(148, 172, 0, FALSE),
(148, 171, 1, FALSE),
(149, 172, 0, FALSE),
(150, 168, 0, FALSE),
(150, 169, 1, FALSE),
(150, 173, 2, FALSE),
(151, 43, 0, FALSE),
(151, 173, 1, FALSE),
(152, 43, 0, FALSE),
(153, 125, 0, FALSE),
(153, 74, 1, FALSE),
(154, 133, 0, FALSE),
(154, 43, 1, FALSE),
(155, 133, 0, FALSE),
(156, 174, 0, FALSE),
(157, 175, 0, FALSE),
(157, 176, 1, FALSE),
(273, 176, 0, FALSE),
(159, 177, 0, FALSE),
(159, 178, 1, FALSE),
(160, 177, 0, FALSE),
(161, 179, 0, FALSE),
(161, 72, 1, FALSE),
(162, 180, 0, FALSE),
(163, 181, 0, FALSE),
(163, 182, 1, FALSE),
(164, 181, 0, FALSE),
(165, 183, 0, FALSE),
(166, 184, 0, FALSE),
(167, 185, 0, FALSE),
(167, 186, 1, FALSE),
(167, 187, 2, TRUE),
(167, 188, 3, FALSE),
(168, 185, 0, FALSE),
(169, 186, 0, FALSE),
(169, 187, 1, TRUE),
(170, 188, 0, FALSE),
(344, 356, 1, FALSE),
(344, 189, 0, FALSE),
(172, 191, 0, FALSE),
(172, 192, 1, TRUE),
(173, 193, 0, FALSE),
(173, 194, 1, FALSE),
(174, 195, 0, FALSE),
(174, 196, 1, FALSE),
(176, 196, 0, FALSE),
(177, 197, 0, FALSE),
(177, 165, 1, FALSE),
(178, 198, 0, FALSE),
(178, 165, 1, FALSE),
(179, 199, 0, FALSE),
(179, 200, 1, FALSE),
(180, 198, 0, FALSE),
(180, 200, 1, FALSE),
(181, 170, 0, FALSE),
(181, 109, 1, FALSE),
(181, 154, 2, FALSE),
(182, 172, 0, FALSE),
(182, 109, 1, FALSE),
(182, 154, 2, FALSE),
(183, 170, 0, FALSE),
(183, 109, 1, FALSE),
(183, 168, 2, FALSE),
(183, 169, 3, FALSE),
(184, 172, 0, FALSE),
(184, 109, 1, FALSE),
(184, 168, 2, FALSE),
(184, 169, 3, FALSE),
(185, 170, 0, FALSE),
(185, 201, 1, FALSE),
(186, 172, 0, FALSE),
(186, 201, 1, FALSE),
(187, 202, 0, FALSE),
(188, 203, 0, FALSE),
(188, 87, 1, FALSE),
(189, 204, 0, FALSE),
(189, 205, 1, FALSE),
(190, 141, 0, FALSE),
(190, 206, 1, FALSE),
(191, 207, 0, FALSE),
(191, 157, 1, FALSE),
(191, 208, 2, TRUE),
(192, 209, 0, FALSE),
(192, 79, 1, TRUE),
(193, 210, 0, FALSE),
(193, 211, 1, FALSE),
(194, 176, 0, FALSE),
(194, 212, 1, FALSE),
(195, 213, 0, FALSE),
(195, 214, 1, FALSE),
(196, 215, 0, FALSE),
(197, 216, 0, FALSE),
(197, 217, 1, TRUE),
(198, 218, 0, FALSE),
(199, 219, 0, FALSE),
(199, 189, 1, FALSE),
(200, 220, 0, FALSE),
(200, 221, 1, FALSE),
(201, 222, 0, FALSE),
(201, 223, 1, FALSE),
(202, 72, 0, FALSE),
(202, 224, 1, FALSE),
(203, 225, 0, FALSE),
(203, 226, 1, FALSE),
(204, 227, 0, FALSE),
(204, 228, 1, FALSE),
(205, 229, 0, FALSE),
(205, 230, 1, FALSE),
(206, 170, 0, FALSE),
(206, 224, 1, FALSE),
(207, 172, 0, FALSE),
(207, 224, 1, FALSE),
(208, 231, 0, FALSE),
(208, 170, 1, FALSE),
(209, 37, 0, FALSE),
(209, 171, 1, FALSE),
(210, 101, 0, FALSE),
(210, 170, 1, FALSE),
(211, 232, 0, FALSE),
(211, 233, 1, FALSE),
(212, 56, 0, FALSE),
(212, 234, 1, FALSE),
(213, 235, 0, FALSE),
(214, 236, 0, FALSE),
(214, 237, 1, FALSE),
(215, 238, 0, FALSE),
(215, 236, 1, FALSE),
(215, 237, 2, FALSE),
(216, 239, 0, FALSE),
(217, 236, 0, FALSE),
(217, 237, 1, FALSE),
(217, 176, 2, FALSE),
(217, 212, 3, FALSE),
(218, 213, 0, FALSE),
(218, 240, 1, FALSE),
(220, 242, 0, FALSE),
(221, 243, 0, FALSE),
(222, 244, 0, FALSE),
(223, 245, 0, FALSE),
(224, 246, 0, FALSE),
(226, 248, 0, FALSE),
(227, 249, 0, FALSE),
(228, 250, 0, FALSE),
(229, 251, 0, FALSE),
(230, 252, 0, FALSE),
(231, 144, 0, FALSE),
(231, 253, 1, FALSE),
(232, 3, 0, FALSE),
(232, 144, 1, FALSE),
(232, 253, 2, FALSE),
(233, 254, 0, FALSE),
(233, 255, 1, FALSE),
(234, 256, 0, FALSE),
(234, 257, 1, FALSE),
(235, 258, 0, FALSE),
(235, 52, 1, FALSE),
(236, 259, 0, FALSE),
(236, 260, 1, FALSE),
(237, 87, 0, FALSE);           
INSERT INTO PUBLIC.CWORD_PINYIN_BRIDGE(CWORD_ID, CHARACTER_PINYIN_ID, POS, NOTONE) VALUES
(237, 261, 1, FALSE),
(238, 262, 0, FALSE),
(238, 143, 1, FALSE),
(239, 263, 0, FALSE),
(239, 214, 1, FALSE),
(241, 135, 1, FALSE),
(241, 265, 0, FALSE),
(242, 37, 0, FALSE),
(242, 76, 1, FALSE),
(243, 266, 0, FALSE),
(243, 76, 1, FALSE),
(244, 267, 0, FALSE),
(244, 66, 1, TRUE),
(245, 120, 0, FALSE),
(245, 66, 1, TRUE),
(246, 268, 0, FALSE),
(246, 269, 1, FALSE),
(343, 355, 1, FALSE),
(343, 354, 0, FALSE),
(248, 271, 0, FALSE),
(249, 207, 0, FALSE),
(249, 272, 1, FALSE),
(250, 273, 0, FALSE),
(251, 274, 0, FALSE),
(251, 275, 1, TRUE),
(252, 33, 0, FALSE),
(252, 79, 1, TRUE),
(253, 36, 0, FALSE),
(253, 276, 1, TRUE),
(254, 277, 0, FALSE),
(254, 278, 1, FALSE),
(255, 279, 0, FALSE),
(255, 205, 1, FALSE),
(256, 280, 0, FALSE),
(256, 68, 1, TRUE),
(257, 281, 0, FALSE),
(257, 282, 1, FALSE),
(258, 283, 0, FALSE),
(259, 284, 0, FALSE),
(260, 285, 0, FALSE),
(261, 286, 0, FALSE),
(262, 160, 0, FALSE),
(263, 287, 0, FALSE),
(264, 288, 0, FALSE),
(265, 289, 0, FALSE),
(265, 283, 1, FALSE),
(266, 203, 0, FALSE),
(266, 290, 1, FALSE),
(268, 290, 2, FALSE),
(268, 203, 1, FALSE),
(268, 292, 0, FALSE),
(269, 293, 0, FALSE),
(269, 294, 1, FALSE),
(270, 295, 0, FALSE),
(270, 283, 1, FALSE),
(271, 296, 0, FALSE),
(271, 294, 1, FALSE),
(272, 297, 0, FALSE),
(274, 203, 0, FALSE),
(274, 172, 1, FALSE),
(275, 203, 0, FALSE),
(275, 298, 1, FALSE),
(276, 203, 0, FALSE),
(276, 155, 1, FALSE),
(277, 299, 0, FALSE),
(278, 162, 0, FALSE),
(278, 300, 1, FALSE),
(279, 227, 0, FALSE),
(279, 229, 1, FALSE),
(282, 301, 1, FALSE),
(282, 203, 0, FALSE),
(281, 16, 0, FALSE),
(281, 203, 1, FALSE),
(281, 301, 2, FALSE),
(283, 302, 0, FALSE),
(283, 29, 1, FALSE),
(284, 111, 0, FALSE),
(284, 29, 1, FALSE),
(285, 303, 0, FALSE),
(285, 57, 1, FALSE),
(286, 52, 0, FALSE),
(286, 304, 1, FALSE),
(287, 52, 0, FALSE),
(287, 305, 1, FALSE),
(288, 306, 1, FALSE),
(289, 233, 0, FALSE),
(289, 306, 1, FALSE),
(290, 307, 0, FALSE),
(291, 308, 0, FALSE),
(292, 147, 0, FALSE),
(292, 309, 1, TRUE),
(293, 310, 0, FALSE),
(293, 311, 1, FALSE),
(294, 189, 0, FALSE),
(295, 312, 0, FALSE),
(296, 313, 0, FALSE),
(296, 314, 1, FALSE),
(297, 315, 0, FALSE),
(297, 22, 1, FALSE),
(298, 231, 0, FALSE),
(299, 316, 0, FALSE),
(300, 317, 0, FALSE),
(300, 318, 1, TRUE),
(301, 319, 0, FALSE),
(301, 66, 1, TRUE),
(302, 320, 0, FALSE),
(302, 321, 1, FALSE),
(303, 136, 0, FALSE),
(303, 322, 1, FALSE),
(304, 207, 0, FALSE),
(304, 66, 1, TRUE),
(305, 300, 0, FALSE),
(305, 130, 1, FALSE),
(306, 323, 0, FALSE),
(307, 324, 0, FALSE),
(308, 30, 0, FALSE),
(308, 233, 1, FALSE),
(309, 325, 0, FALSE),
(309, 326, 1, TRUE),
(309, 79, 2, TRUE),
(310, 82, 0, FALSE),
(310, 327, 1, FALSE),
(311, 166, 0, FALSE),
(311, 328, 1, TRUE),
(312, 329, 0, FALSE),
(313, 330, 0, FALSE),
(313, 330, 1, FALSE),
(314, 257, 0, FALSE),
(314, 67, 1, FALSE),
(314, 68, 2, TRUE),
(315, 331, 0, FALSE),
(315, 332, 1, TRUE),
(316, 333, 0, FALSE),
(317, 70, 0, FALSE),
(317, 334, 1, TRUE),
(318, 335, 0, FALSE),
(319, 93, 0, FALSE),
(319, 196, 1, FALSE),
(320, 336, 0, FALSE),
(321, 337, 0, FALSE),
(345, 221, 0, FALSE),
(323, 338, 0, FALSE),
(323, 339, 1, FALSE),
(324, 340, 0, FALSE),
(324, 200, 1, FALSE),
(325, 289, 0, FALSE),
(326, 341, 0, FALSE),
(326, 341, 1, FALSE),
(327, 342, 0, FALSE),
(327, 343, 1, FALSE),
(328, 155, 0, FALSE),
(328, 342, 1, FALSE),
(329, 321, 0, FALSE),
(329, 344, 1, FALSE),
(329, 345, 2, FALSE),
(330, 346, 0, FALSE),
(330, 55, 1, FALSE),
(331, 55, 0, FALSE),
(331, 347, 1, FALSE),
(332, 73, 0, FALSE),
(333, 348, 0, FALSE),
(334, 349, 0, FALSE),
(335, 35, 0, FALSE),
(336, 350, 0, FALSE),
(337, 351, 0, FALSE),
(337, 350, 1, FALSE),
(338, 94, 0, FALSE),
(338, 350, 1, FALSE),
(342, 350, 1, FALSE),
(342, 89, 0, FALSE),
(340, 353, 0, FALSE),
(341, 319, 0, FALSE),
(346, 357, 0, FALSE),
(347, 357, 0, FALSE),
(347, 358, 1, FALSE),
(348, 359, 0, FALSE),
(349, 52, 0, FALSE),
(349, 257, 1, FALSE),
(350, 360, 0, FALSE),
(351, 361, 0, FALSE),
(351, 311, 1, FALSE),
(352, 362, 0, FALSE),
(353, 363, 0, FALSE),
(353, 129, 1, FALSE),
(354, 364, 0, FALSE);
INSERT INTO PUBLIC.CWORD_PINYIN_BRIDGE(CWORD_ID, CHARACTER_PINYIN_ID, POS, NOTONE) VALUES
(354, 351, 1, FALSE),
(355, 162, 0, FALSE),
(355, 284, 1, FALSE),
(356, 365, 0, FALSE),
(356, 205, 1, FALSE),
(357, 366, 0, FALSE),
(357, 342, 1, FALSE),
(358, 367, 0, FALSE),
(359, 368, 0, FALSE),
(359, 369, 1, FALSE),
(360, 165, 0, FALSE),
(360, 370, 1, FALSE),
(361, 304, 0, FALSE),
(361, 200, 1, FALSE),
(362, 305, 0, FALSE),
(362, 200, 1, FALSE),
(363, 198, 0, FALSE),
(363, 371, 1, TRUE),
(364, 372, 0, FALSE),
(365, 220, 0, FALSE),
(365, 2, 1, FALSE),
(366, 220, 0, FALSE),
(366, 125, 1, FALSE),
(367, 373, 0, FALSE),
(367, 374, 1, FALSE),
(368, 375, 0, FALSE),
(369, 376, 0, FALSE),
(370, 377, 0, FALSE),
(371, 377, 0, FALSE),
(371, 112, 1, FALSE),
(371, 201, 2, FALSE),
(372, 112, 0, FALSE),
(372, 201, 1, FALSE),
(373, 100, 0, FALSE),
(374, 378, 0, FALSE),
(374, 331, 1, FALSE),
(375, 104, 0, FALSE),
(375, 379, 1, FALSE),
(376, 123, 0, FALSE),
(376, 380, 1, FALSE),
(377, 123, 0, FALSE),
(377, 32, 1, FALSE),
(378, 123, 0, FALSE),
(378, 381, 1, FALSE),
(379, 382, 0, FALSE),
(379, 181, 1, FALSE),
(380, 383, 0, FALSE),
(380, 44, 1, FALSE),
(381, 384, 0, FALSE),
(381, 44, 1, FALSE),
(382, 205, 0, FALSE),
(382, 385, 1, FALSE),
(383, 386, 0, FALSE),
(383, 188, 1, FALSE),
(384, 387, 0, FALSE),
(384, 176, 1, FALSE),
(385, 347, 0, FALSE),
(385, 32, 1, FALSE),
(386, 388, 0, FALSE),
(386, 32, 1, FALSE),
(387, 238, 0, FALSE),
(387, 389, 1, FALSE),
(388, 390, 0, FALSE),
(388, 391, 1, FALSE),
(389, 123, 0, FALSE),
(389, 392, 1, FALSE),
(389, 36, 2, FALSE),
(390, 88, 0, FALSE),
(390, 207, 1, FALSE),
(390, 228, 2, FALSE),
(390, 393, 3, FALSE),
(391, 153, 0, FALSE),
(391, 109, 1, FALSE),
(391, 32, 2, FALSE),
(392, 75, 0, FALSE),
(392, 394, 1, FALSE),
(393, 395, 0, FALSE),
(393, 394, 1, FALSE),
(394, 242, 0, FALSE),
(394, 160, 1, FALSE),
(394, 396, 2, FALSE),
(394, 112, 3, FALSE),
(395, 128, 0, FALSE),
(395, 160, 1, FALSE),
(395, 396, 2, FALSE),
(395, 249, 3, FALSE),
(396, 397, 0, FALSE),
(397, 86, 0, FALSE),
(398, 398, 0, FALSE),
(399, 272, 0, FALSE),
(399, 107, 1, FALSE),
(400, 157, 0, FALSE),
(400, 208, 1, TRUE),
(401, 40, 0, FALSE),
(401, 31, 1, FALSE),
(401, 32, 2, FALSE),
(402, 37, 0, FALSE),
(402, 399, 1, FALSE),
(403, 37, 0, FALSE),
(403, 31, 1, FALSE),
(403, 32, 2, FALSE),
(404, 119, 0, FALSE),
(404, 305, 1, FALSE),
(405, 280, 0, FALSE),
(405, 68, 1, TRUE),
(405, 301, 2, FALSE),
(406, 42, 0, FALSE),
(406, 65, 1, FALSE),
(407, 164, 0, FALSE),
(407, 200, 1, FALSE),
(408, 228, 0, FALSE),
(408, 393, 1, FALSE),
(409, 207, 0, FALSE),
(409, 228, 1, FALSE),
(409, 393, 2, FALSE),
(410, 400, 0, FALSE),
(410, 222, 1, FALSE),
(411, 400, 0, FALSE),
(412, 401, 0, FALSE),
(412, 402, 1, TRUE),
(413, 403, 0, FALSE),
(413, 404, 1, FALSE),
(414, 405, 0, FALSE),
(415, 406, 0, FALSE),
(477, 275, 1, TRUE),
(477, 454, 0, FALSE),
(417, 408, 0, FALSE),
(417, 409, 1, FALSE),
(418, 409, 0, FALSE),
(419, 410, 0, FALSE),
(420, 207, 0, FALSE),
(420, 155, 1, FALSE),
(420, 79, 2, TRUE),
(421, 411, 0, FALSE),
(421, 412, 1, FALSE),
(422, 411, 0, FALSE),
(422, 413, 1, FALSE),
(423, 413, 0, FALSE),
(424, 414, 0, FALSE),
(424, 415, 1, FALSE),
(425, 234, 0, FALSE),
(425, 65, 1, FALSE),
(426, 365, 0, FALSE),
(427, 416, 0, FALSE),
(428, 417, 0, FALSE),
(428, 228, 1, FALSE),
(429, 266, 0, FALSE),
(430, 331, 0, FALSE),
(431, 418, 0, FALSE),
(432, 419, 0, FALSE),
(433, 420, 0, FALSE),
(434, 421, 0, FALSE),
(435, 422, 0, FALSE),
(436, 423, 0, FALSE),
(436, 424, 1, FALSE),
(478, 423, 0, FALSE),
(438, 425, 0, FALSE),
(439, 426, 0, FALSE),
(439, 22, 1, FALSE),
(440, 35, 0, FALSE),
(440, 46, 1, FALSE),
(441, 121, 0, FALSE),
(441, 32, 1, FALSE),
(442, 35, 0, FALSE),
(442, 162, 1, FALSE),
(443, 362, 0, FALSE),
(443, 121, 1, FALSE),
(443, 66, 2, TRUE),
(444, 202, 0, FALSE),
(444, 54, 1, FALSE),
(445, 427, 0, FALSE),
(445, 428, 1, FALSE),
(446, 106, 0, FALSE),
(446, 429, 1, FALSE),
(447, 106, 0, FALSE),
(447, 429, 1, FALSE),
(447, 130, 2, FALSE),
(448, 150, 0, FALSE),
(448, 102, 1, TRUE),
(449, 430, 0, FALSE),
(449, 135, 1, FALSE),
(450, 430, 0, FALSE),
(450, 431, 1, FALSE),
(451, 149, 0, FALSE);             
INSERT INTO PUBLIC.CWORD_PINYIN_BRIDGE(CWORD_ID, CHARACTER_PINYIN_ID, POS, NOTONE) VALUES
(451, 16, 1, FALSE),
(452, 149, 0, FALSE),
(452, 88, 1, FALSE),
(453, 432, 0, FALSE),
(454, 433, 0, FALSE),
(454, 106, 1, FALSE),
(455, 434, 0, FALSE),
(455, 435, 1, FALSE),
(456, 436, 0, FALSE),
(457, 273, 0, FALSE),
(457, 437, 1, FALSE),
(458, 145, 0, FALSE),
(458, 438, 1, FALSE),
(459, 439, 0, FALSE),
(460, 277, 0, FALSE),
(460, 365, 1, FALSE),
(461, 440, 0, FALSE),
(461, 275, 1, TRUE),
(462, 441, 0, FALSE),
(463, 442, 0, FALSE),
(463, 443, 1, FALSE),
(464, 16, 0, FALSE),
(464, 397, 1, FALSE),
(465, 444, 0, FALSE),
(466, 444, 0, FALSE),
(466, 150, 1, FALSE),
(467, 445, 0, FALSE),
(468, 434, 0, FALSE),
(468, 334, 1, TRUE),
(469, 446, 0, FALSE),
(469, 29, 1, FALSE),
(473, 452, 1, FALSE),
(473, 203, 0, FALSE),
(471, 448, 0, FALSE),
(471, 449, 1, FALSE),
(472, 450, 0, FALSE),
(472, 451, 1, FALSE),
(474, 418, 0, FALSE),
(474, 453, 1, FALSE),
(475, 153, 0, FALSE),
(475, 201, 1, FALSE),
(476, 197, 0, FALSE),
(479, 202, 0, FALSE),
(479, 104, 1, FALSE);    
CREATE MEMORY TABLE PUBLIC.ENGLISH(
    ENG_ID INTEGER DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_C13F432C_0F70_4565_8E9C_535FE4824433) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_C13F432C_0F70_4565_8E9C_535FE4824433,
    CWORD_ID INTEGER,
    TRANSLATION VARCHAR(50)
);
ALTER TABLE PUBLIC.ENGLISH ADD CONSTRAINT PUBLIC.CONSTRAINT_C PRIMARY KEY(ENG_ID);             
-- 524 +/- SELECT COUNT(*) FROM PUBLIC.ENGLISH;
INSERT INTO PUBLIC.ENGLISH(ENG_ID, CWORD_ID, TRANSLATION) VALUES
(1, 1, 'hello'),
(2, 2, 'you'),
(3, 3, 'good'),
(4, 4, 'I'),
(5, 4, 'me'),
(6, 5, 'modale particule (and what about...)'),
(7, 6, 'also'),
(8, 6, 'too'),
(9, 7, 'modale particule (question)'),
(10, 8, 'very'),
(11, 9, 'busy'),
(12, 10, 'father'),
(13, 11, 'mother'),
(14, 12, 'he'),
(15, 12, 'him'),
(16, 13, 'they'),
(17, 13, 'them'),
(18, 14, 'we'),
(19, 14, 'us'),
(20, 15, 'you (plural)'),
(21, 16, 'both'),
(22, 16, 'all'),
(23, 17, 'not'),
(24, 17, 'no'),
(25, 18, 'male'),
(26, 19, 'friend'),
(27, 20, 'big brother'),
(28, 21, 'to want'),
(29, 22, 'coffee'),
(30, 23, 'little brother'),
(31, 24, 'to drink'),
(32, 25, 'she'),
(33, 25, 'her'),
(34, 26, 'to be'),
(35, 27, 'which'),
(36, 28, 'country'),
(37, 29, 'people'),
(38, 30, 'that'),
(39, 31, 'who'),
(40, 31, 'whom'),
(41, 32, 'teacher'),
(42, 33, 'China'),
(43, 34, 'you (polite)'),
(44, 35, 'this'),
(45, 36, 'foreign language'),
(46, 37, 'doctor'),
(47, 38, 'grandmother on father side'),
(48, 39, 'grandmother on mother side'),
(49, 40, 'to know (somebody)'),
(50, 40, 'to recognize'),
(51, 41, 'happy'),
(52, 41, 'pleased'),
(53, 42, 'may'),
(54, 43, 'to enter'),
(55, 44, 'to come'),
(56, 45, 'to come in'),
(57, 46, 'please'),
(58, 47, 'reporter'),
(59, 48, 'to ask'),
(60, 49, 'to be called'),
(61, 49, 'surname'),
(62, 50, 'what''s your honorable name ?'),
(63, 51, 'may I ask'),
(258, 219, 'to be called (first name)'),
(65, 53, 'mister'),
(66, 54, 'language'),
(67, 55, 'institute'),
(68, 55, 'college'),
(69, 56, 'modale particule (possessive)'),
(70, 57, 'student'),
(71, 58, 'what'),
(72, 59, 'to study'),
(73, 60, 'chinese language'),
(74, 61, 'England'),
(75, 62, 'Canada'),
(76, 63, 'USA'),
(77, 64, 'cafeteria'),
(78, 64, 'dining room'),
(79, 65, 'to be (somewhere)'),
(80, 66, 'where'),
(81, 67, 'dormitory'),
(82, 68, 'female'),
(83, 69, 'to sit'),
(84, 70, 'to thank'),
(85, 71, 'sorry'),
(86, 72, 'never mind'),
(88, 74, 'good bye'),
(89, 75, 'again'),
(90, 76, 'miss'),
(91, 77, 'two'),
(92, 78, 'story'),
(93, 78, 'floor'),
(94, 79, 'four'),
(95, 80, 'number'),
(96, 81, 'need not'),
(97, 82, 'here'),
(98, 83, 'late'),
(99, 84, 'particule'),
(100, 85, 'how many'),
(130, 85, 'how much (small numbers)'),
(102, 86, 'family'),
(103, 86, 'home'),
(104, 87, 'measure word for family member'),
(105, 88, 'picture'),
(106, 88, 'photo'),
(107, 89, 'and'),
(108, 90, 'measure word for general use'),
(109, 91, 'elder sister'),
(169, 140, 'two (counting)'),
(111, 93, 'in addition'),
(112, 94, 'altogether'),
(113, 95, 'younger sister'),
(114, 96, 'little'),
(115, 97, 'dog'),
(116, 98, 'measure word for flat objects'),
(117, 99, 'as it should be'),
(118, 100, 'really'),
(119, 100, 'real'),
(120, 101, 'lovely'),
(121, 101, 'cute'),
(122, 102, 'to love'),
(123, 103, 'to do'),
(124, 103, 'to make'),
(125, 104, 'to work'),
(126, 104, 'work'),
(127, 105, 'big'),
(128, 106, 'how many'),
(129, 106, 'how much (large numbers)'),
(131, 107, 'many'),
(132, 107, 'much'),
(133, 108, 'few'),
(134, 108, 'less'),
(334, 288, 'outside'),
(136, 110, 'language'),
(137, 111, 'foreign country'),
(138, 112, 'hundred'),
(139, 113, 'cell phone'),
(140, 114, 'number (phone)'),
(141, 115, 'wind'),
(142, 116, 'taxi'),
(143, 117, 'subway'),
(144, 118, 'station'),
(145, 119, 'subway station'),
(146, 120, 'car'),
(168, 139, 'bus'),
(148, 122, 'bus station'),
(149, 123, 'train'),
(150, 124, 'plane'),
(151, 125, 'airport'),
(152, 69, 'take (a vehicle)'),
(153, 126, 'bicycle'),
(154, 127, 'to ride (a bike)'),
(155, 128, 'to walk'),
(156, 129, 'from (place'),
(157, 129, 'time)'),
(158, 130, 'to (place'),
(159, 130, 'time)'),
(160, 131, 'often'),
(161, 132, 'every'),
(162, 133, 'month'),
(163, 134, 'measure word for hour'),
(164, 135, 'long'),
(165, 136, 'hour (in length)'),
(167, 138, 'minute (in length)'),
(170, 141, 'this year'),
(171, 142, 'year'),
(172, 143, 'measure word for years of age'),
(173, 144, 'class'),
(174, 144, 'lesson'),
(175, 145, 'week'),
(176, 146, 'morning'),
(177, 147, 'above'),
(178, 147, 'last (before)'),
(179, 148, 'afternoon'),
(180, 149, 'below');             
INSERT INTO PUBLIC.ENGLISH(ENG_ID, CWORD_ID, TRANSLATION) VALUES
(181, 149, 'next'),
(182, 150, 'sunday'),
(183, 151, 'birthday'),
(184, 152, 'to be born'),
(185, 153, 'how old'),
(186, 80, 'day of the month'),
(187, 154, 'to be born'),
(188, 155, 'to go out'),
(189, 155, 'to come out'),
(190, 156, 'to be born the year of...'),
(191, 157, 'get together'),
(192, 157, 'party'),
(316, 273, 'can'),
(194, 159, 'to congratulate'),
(195, 160, 'to wish'),
(196, 161, 'to participate'),
(197, 162, 'to eat'),
(198, 163, 'cake'),
(199, 164, 'egg'),
(200, 165, 'to buy'),
(201, 166, 'measure word for bottle'),
(202, 167, 'red wine'),
(203, 168, 'red'),
(204, 169, 'grape'),
(205, 170, 'wine'),
(206, 170, 'liquor'),
(207, 170, 'alcohol'),
(399, 344, 'quick'),
(209, 172, 'pretty'),
(210, 172, 'beautiful'),
(211, 173, 'roast duck'),
(212, 174, 'longevity noodle'),
(214, 176, 'noodles'),
(215, 177, 'last year'),
(216, 178, 'next year'),
(217, 179, 'yesterday'),
(218, 180, 'tomorrow'),
(219, 181, 'last month'),
(220, 182, 'next month'),
(221, 183, 'last week'),
(222, 184, 'next week'),
(223, 185, 'last time'),
(224, 186, 'next time'),
(225, 187, 'to return'),
(226, 188, 'together'),
(227, 189, 'if'),
(228, 190, 'hot pot'),
(229, 191, 'sometimes'),
(230, 192, 'to play'),
(231, 193, 'to rest'),
(232, 194, 'meeting'),
(233, 195, 'restaurant'),
(234, 196, 'hot'),
(235, 197, 'warm'),
(236, 198, 'cold'),
(237, 199, 'nice (weather)'),
(238, 200, 'recently'),
(239, 201, 'health'),
(240, 202, 'overtime'),
(241, 203, 'to tell'),
(242, 204, 'to agree'),
(243, 205, 'business'),
(244, 205, 'matter'),
(245, 206, 'to start work'),
(246, 207, 'to stop work'),
(247, 208, 'early morning'),
(248, 209, 'noon'),
(249, 210, 'evening'),
(250, 211, 'night'),
(251, 212, 'to remember'),
(252, 213, 'to forget'),
(253, 214, 'telephone'),
(254, 215, 'to give a phone call'),
(255, 216, 'to finish'),
(256, 217, 'phone conference'),
(257, 218, 'restaurant'),
(259, 220, 'three'),
(260, 221, 'five'),
(261, 222, 'six'),
(262, 223, 'seven'),
(263, 224, 'eight'),
(265, 226, 'nine'),
(266, 227, 'ten'),
(267, 228, 'thousand'),
(268, 229, 'ten thousand'),
(269, 230, 'only'),
(270, 231, 'self'),
(271, 232, 'myself'),
(272, 233, 'parent'),
(273, 234, 'because'),
(274, 235, 'therefore'),
(275, 236, 'cheap'),
(276, 237, 'wake up'),
(277, 238, 'market'),
(278, 239, 'shop'),
(279, 239, 'store'),
(281, 241, 'traffic jam'),
(282, 242, 'Chinese food'),
(283, 243, 'Western food'),
(284, 244, 'fake'),
(285, 245, 'real'),
(286, 246, 'CD'),
(398, 343, 'music'),
(288, 248, 'with'),
(289, 248, 'to follow'),
(290, 249, 'famous'),
(291, 250, 'newspaper'),
(292, 251, 'notebook'),
(293, 252, 'there'),
(294, 253, 'master worker'),
(295, 254, 'banana'),
(296, 255, 'apple'),
(297, 256, 'how'),
(298, 257, 'easy'),
(299, 258, 'money'),
(300, 259, 'measure word for weight (500g)'),
(301, 260, 'measure word for money (unit)'),
(302, 261, 'measure word for money (tenth)'),
(303, 262, 'measure word for money (hundredth)'),
(304, 263, 'to give a present'),
(305, 264, 'to give'),
(306, 265, 'to give change'),
(307, 266, 'half'),
(309, 268, 'other half'),
(310, 269, 'to pay (formal'),
(311, 269, 'company)'),
(312, 269, 'to expense'),
(313, 270, 'to spend money'),
(314, 271, 'free'),
(315, 272, 'can'),
(317, 273, 'capable of'),
(318, 42, 'could'),
(319, 274, 'a little (short action)'),
(320, 275, 'a little (short time)'),
(321, 276, 'a little bit'),
(322, 277, 'to wait'),
(323, 278, 'company'),
(324, 279, 'colleague'),
(327, 282, 'same'),
(326, 281, 'different'),
(328, 283, 'but'),
(329, 283, 'however'),
(330, 284, 'or (in question)'),
(331, 285, 'or (in statement)'),
(332, 286, 'before'),
(333, 287, 'after'),
(335, 289, 'inside'),
(336, 290, 'left'),
(337, 291, 'right'),
(338, 292, 'let''s go'),
(339, 293, 'to run'),
(340, 294, 'fast'),
(341, 294, 'quick'),
(342, 295, 'slow'),
(343, 296, 'should'),
(344, 297, 'to need'),
(345, 298, 'early'),
(346, 299, 'to change'),
(347, 300, 'to feel'),
(348, 300, 'to think'),
(349, 301, 'other'),
(350, 302, 'cloth'),
(351, 303, 'place'),
(352, 304, 'some'),
(353, 305, 'driver');          
INSERT INTO PUBLIC.ENGLISH(ENG_ID, CWORD_ID, TRANSLATION) VALUES
(354, 306, 'short of'),
(355, 306, 'lack'),
(356, 307, 'quarter'),
(357, 308, 'no (modest denial)'),
(358, 309, 'grand daughter on son side'),
(359, 310, 'daughter'),
(360, 311, 'years of age'),
(361, 312, 'number'),
(362, 312, 'counting'),
(363, 313, 'bye bye (transliteration)'),
(364, 314, 'why'),
(365, 315, 'thing'),
(366, 315, 'object'),
(367, 316, 'to write'),
(368, 317, 'Chinese character'),
(369, 318, 'measure word for degree'),
(370, 319, 'to meet'),
(371, 320, 'long time'),
(372, 321, 'far'),
(401, 345, 'close by'),
(374, 323, 'to hear (somebody say)'),
(375, 324, 'to chat'),
(376, 325, 'to look for'),
(377, 326, 'to try'),
(378, 327, 'menu'),
(379, 328, 'to choose on the menu'),
(380, 329, 'attendant (at the restaurant)'),
(381, 330, 'to invite'),
(382, 331, 'to invite (pay)'),
(383, 332, 'to take'),
(384, 333, 'new'),
(385, 334, 'old (thing)'),
(386, 335, 'old (people)'),
(387, 336, 'heart'),
(388, 337, 'happy'),
(389, 338, 'careful'),
(397, 342, 'concerned'),
(396, 342, 'take care'),
(392, 340, 'light'),
(393, 341, 'don''t'),
(400, 344, 'fast'),
(402, 346, 'tea'),
(403, 347, 'tea leaves'),
(404, 348, 'short'),
(405, 349, 'thought (but wrong)'),
(406, 350, 'think'),
(407, 350, 'want'),
(408, 351, 'take a walk'),
(409, 352, 'to kiss'),
(410, 353, 'to shake hands'),
(411, 354, 'to leave'),
(412, 355, 'kilogramme'),
(413, 356, 'fruit'),
(414, 357, 'vegetable'),
(415, 358, 'meat'),
(416, 359, 'scenery'),
(417, 360, 'year at school'),
(418, 361, 'the day before yesterday'),
(419, 362, 'the day after tomorrow'),
(420, 363, 'to understand'),
(421, 364, 'to understand'),
(422, 365, 'best'),
(423, 366, 'most'),
(424, 367, 'to sing'),
(425, 368, 'more'),
(426, 369, 'particule (to express past perfect after verb)'),
(427, 370, 'particule (prefix for orinal numbers)'),
(428, 371, 'the first time'),
(429, 372, 'one time'),
(430, 373, 'to use'),
(431, 374, 'landlord'),
(432, 375, 'furniture'),
(433, 376, 'salary'),
(434, 377, 'worker'),
(435, 378, 'factory'),
(436, 379, 'chicken egg'),
(437, 380, 'milk'),
(438, 381, 'yoghurt'),
(439, 382, 'juice'),
(440, 383, 'beer'),
(441, 384, 'appointment'),
(442, 384, 'date'),
(443, 385, 'customer'),
(444, 386, 'owner'),
(445, 386, 'host'),
(446, 387, 'to make plan'),
(447, 388, 'weekend'),
(448, 389, 'engineer'),
(449, 390, 'uninteresting'),
(450, 391, 'everybody'),
(451, 392, 'US dollar'),
(452, 393, 'euro'),
(453, 394, 'one third'),
(454, 395, 'ten percent'),
(455, 396, 'wrong'),
(456, 397, 'correct'),
(457, 398, 'increase'),
(458, 399, 'calling card'),
(459, 400, 'time (in length)'),
(460, 401, 'foreigner'),
(461, 402, 'Chinese language'),
(462, 403, 'Chinese person'),
(463, 404, 'then'),
(464, 404, 'after'),
(465, 405, 'how are you ?'),
(466, 406, 'hospital'),
(467, 407, 'today'),
(468, 408, 'interest'),
(469, 409, 'interesting'),
(470, 410, 'all over the body'),
(471, 411, 'whole'),
(472, 412, 'comfortable'),
(473, 413, 'to do physical exercize'),
(474, 414, 'head'),
(475, 415, 'painful'),
(545, 477, 'throat'),
(477, 417, 'to see a doctor'),
(478, 418, 'illness'),
(479, 418, 'to get sick'),
(480, 419, 'to wear'),
(481, 420, 'somewhat'),
(482, 420, 'a bit'),
(483, 421, 'to become inflamed'),
(484, 422, 'to have fever'),
(485, 423, 'to burn'),
(486, 424, 'to have a cold'),
(487, 425, 'to be hospitalized'),
(488, 426, 'water'),
(489, 427, 'medicine'),
(490, 428, 'to be willing to do something'),
(491, 429, 'west'),
(492, 430, 'east'),
(493, 431, 'north'),
(494, 432, 'south'),
(495, 264, 'to'),
(496, 264, 'for'),
(497, 433, 'to repair'),
(498, 434, 'to help'),
(499, 435, 'bad'),
(500, 435, 'broken'),
(501, 436, 'software'),
(546, 478, 'soft'),
(503, 438, 'hard'),
(504, 439, 'important'),
(505, 440, 'wife'),
(506, 441, 'spouse'),
(507, 442, 'husband'),
(508, 443, 'dear...'),
(509, 444, 'to come back'),
(510, 445, 'to hope'),
(511, 446, 'to take a picture'),
(512, 447, 'camera'),
(513, 448, 'arrived'),
(514, 449, 'to stop the car'),
(515, 450, 'to stop'),
(516, 451, 'never (ever)'),
(517, 452, 'never (before)'),
(518, 453, 'to bring');  
INSERT INTO PUBLIC.ENGLISH(ENG_ID, CWORD_ID, TRANSLATION) VALUES
(519, 454, 'passport'),
(520, 455, 'visa'),
(521, 456, 'empty'),
(522, 457, 'bag'),
(523, 457, 'school bag'),
(524, 458, 'luggage'),
(525, 459, 'to climb'),
(526, 460, 'perfume'),
(527, 461, 'table'),
(528, 462, 'sleepy'),
(529, 463, 'just now'),
(530, 464, 'not bad'),
(531, 465, 'to stay'),
(532, 466, 'to stay until...'),
(533, 467, 'to have to'),
(534, 467, 'must'),
(535, 468, 'to sign'),
(536, 469, 'always (keep happening)'),
(541, 473, 'always (continuously)'),
(538, 471, 'soccer'),
(539, 472, 'match'),
(540, 472, 'game'),
(542, 474, 'Beijing'),
(543, 475, 'everytime'),
(544, 476, 'to go'),
(547, 479, 'to come back home');    
CREATE MEMORY TABLE PUBLIC.CWORD_SCORE(
    CWORD_ID INT NOT NULL,
    SCORE INT
);            
-- 460 +/- SELECT COUNT(*) FROM PUBLIC.CWORD_SCORE;            
INSERT INTO PUBLIC.CWORD_SCORE(CWORD_ID, SCORE) VALUES
(1, 93),
(2, 93),
(3, 99),
(4, 99),
(5, 99),
(6, 99),
(7, 98),
(8, 98),
(9, 87),
(10, 98),
(11, 87),
(12, 99),
(13, 99),
(14, 99),
(15, 93),
(16, 98),
(17, 98),
(18, 96),
(19, 99),
(20, 99),
(21, 75),
(22, 99),
(23, 99),
(24, 87),
(25, 99),
(26, 93),
(27, 99),
(28, 99),
(29, 93),
(30, 93),
(31, 96),
(32, 99),
(33, 99),
(34, 93),
(35, 96),
(36, 96),
(37, 98),
(38, 99),
(39, 99),
(40, 99),
(41, 99),
(42, 99),
(43, 96),
(44, 75),
(45, 93),
(46, 87),
(47, 99),
(48, 96),
(49, 95),
(50, 99),
(51, 99),
(219, 93),
(53, 99),
(54, 99),
(55, 96),
(56, 93),
(57, 93),
(58, 99),
(59, 99),
(60, 98),
(61, 99),
(62, 99),
(63, 99),
(64, 99),
(65, 93),
(66, 99),
(67, 99),
(68, 93),
(69, 93),
(70, 99),
(71, 99),
(72, 99),
(74, 99),
(75, 93),
(76, 96),
(77, 99),
(78, 99),
(79, 87),
(80, 95),
(81, 98),
(82, 99),
(83, 98),
(84, 99),
(85, 99),
(86, 93),
(87, 98),
(88, 99),
(89, 99),
(90, 99),
(91, 93),
(140, 99),
(93, 99),
(94, 99),
(95, 99),
(96, 99),
(97, 98),
(98, 99),
(99, 99),
(100, 98),
(101, 99),
(102, 99),
(103, 98),
(104, 99),
(105, 98),
(106, 99),
(107, 87),
(108, 99),
(288, 87),
(110, 93),
(111, 96),
(112, 96),
(113, 99),
(114, 99),
(115, 95),
(116, 99),
(117, 99),
(118, 87),
(119, 87),
(120, 99),
(139, 99),
(122, 99),
(123, 99),
(124, 99),
(125, 99),
(126, 99),
(127, 96),
(128, 99),
(129, 83),
(130, 99),
(131, 99),
(132, 96),
(133, 98),
(134, 99),
(135, 93),
(136, 50),
(138, 98),
(141, 99),
(142, 96),
(143, 95),
(144, 93),
(145, 75),
(146, 99),
(147, 99),
(148, 66),
(149, 96),
(150, 99),
(151, 99),
(152, 75),
(153, 93),
(154, 66),
(155, 93),
(156, 99),
(157, 98),
(273, 85),
(159, 96),
(160, 93),
(161, 96),
(162, 99),
(163, 99),
(164, 99),
(165, 87),
(166, 93),
(167, 99),
(168, 98),
(169, 99),
(170, 93),
(344, 99),
(172, 99),
(173, 98),
(174, 99),
(176, 99),
(177, 93),
(178, 98),
(179, 99),
(180, 99),
(181, 93),
(182, 93),
(183, 99),
(184, 99),
(185, 82),
(186, 83),
(187, 98),
(188, 75),
(189, 98),
(190, 99),
(191, 99),
(192, 98),
(193, 98),
(194, 99),
(195, 98),
(196, 99),
(197, 95),
(198, 99),
(199, 98),
(200, 96),
(201, 96),
(202, 99),
(203, 99),
(204, 99),
(205, 99),
(206, 99),
(207, 99),
(208, 98),
(209, 98),
(210, 58),
(211, 99),
(212, 93),
(213, 99),
(214, 99),
(215, 75),
(216, 98),
(217, 99),
(218, 91),
(220, 93),
(221, 93),
(222, 98),
(223, 96),
(224, 98),
(226, 98),
(227, 87),
(228, 62),
(229, 83),
(230, 98),
(231, 87),
(232, 99),
(233, 98),
(234, 99),
(235, 75),
(236, 99),
(237, 98),
(238, 33),
(239, 99),
(241, 75),
(242, 50),
(243, 75),
(244, 96),
(245, 98),
(246, 99),
(343, 98),
(248, 97),
(249, 98),
(250, 99),
(251, 96),
(252, 93),
(253, 99),
(254, 96),
(255, 98),
(256, 0),
(257, 99),
(258, 99),
(259, 87),
(260, 99),
(261, 98),
(262, 96),
(263, 91),
(264, 99),
(265, 50),
(266, 98),
(268, 99),
(269, 99),
(270, 87),
(271, 99),
(272, 96),
(274, 98),
(275, 75),
(276, 99),
(277, 87),
(278, 99),
(279, 99),
(282, 99),
(281, 99),
(283, 98),
(284, 87),
(285, 96),
(286, 99),
(287, 99),
(289, 96),
(290, 99),
(291, 96),
(292, 50),
(293, 99),
(294, 96),
(295, 93),
(296, 98),
(297, 96),
(298, 87),
(299, 99),
(300, 99),
(301, 87),
(302, 95),
(303, 87),
(304, 50),
(305, 99),
(306, 98),
(307, 99),
(308, 96),
(309, 98),
(310, 98),
(311, 99),
(312, 99),
(313, 98),
(314, 99),
(315, 75),
(316, 87),
(317, 99),
(318, 96),
(319, 96),
(320, 91),
(321, 99),
(345, 93),
(323, 96),
(324, 87),
(325, 96),
(326, 87),
(327, 99),
(328, 50),
(329, 99),
(330, 87),
(331, 66),
(332, 96),
(333, 98),
(334, 87),
(335, 99),
(336, 96),
(337, 96),
(338, 93),
(342, 99),
(340, 99),
(341, 91),
(346, 66),
(347, 99),
(348, 98),
(349, 75),
(350, 93),
(351, 99),
(352, 98),
(353, 50),
(354, 93),
(355, 75),
(356, 93),
(357, 87),
(358, 93),
(359, 99),
(360, 50),
(361, 93),
(362, 75),
(363, 75),
(364, 99),
(365, 87),
(366, 50),
(367, 99),
(368, 96),
(369, 99),
(370, 93),
(371, 99),
(372, 87),
(373, 96),
(374, 0),
(375, 75),
(376, 99),
(377, 75),
(378, 99),
(379, 99),
(380, 99),
(381, 75),
(382, 99),
(383, 96),
(384, 87),
(385, 93),
(386, 99),
(387, 50),
(388, 99),
(389, 87),
(390, 99),
(391, 75),
(392, 93),
(393, 96),
(394, 96);      
INSERT INTO PUBLIC.CWORD_SCORE(CWORD_ID, SCORE) VALUES
(395, 96),
(396, 96),
(397, 96),
(398, 95),
(399, 75),
(400, 99),
(401, 75),
(402, 50),
(403, 75),
(404, 99),
(405, 50),
(406, 99),
(407, 96),
(408, 98),
(409, 98),
(410, 50),
(411, 87),
(412, 33),
(413, 0),
(414, 87),
(415, 98),
(477, 50),
(417, 75),
(418, 50),
(419, 98),
(420, 0),
(421, 0),
(422, 0),
(423, 75),
(424, 0),
(425, 0),
(426, 75),
(427, 87),
(428, 50),
(429, 0),
(430, 0),
(431, 87),
(432, 87),
(433, 87),
(434, 75),
(435, 93),
(436, 0),
(478, 0),
(438, 98),
(439, 75),
(440, 0),
(441, 75),
(442, 0),
(443, 0),
(444, 50),
(445, 87),
(446, 93),
(447, 99),
(448, 50),
(449, 98),
(450, 96),
(451, 50),
(452, 50),
(453, 93),
(454, 50),
(455, 75),
(456, 50),
(457, 87),
(458, 0),
(459, 93),
(460, 50),
(461, 50),
(462, 83),
(463, 96),
(464, 0),
(465, 99),
(466, 0),
(467, 95),
(468, 75),
(469, 75),
(473, 0),
(471, 87),
(472, 87),
(474, 50),
(475, 50),
(476, 0),
(479, 20);     
CREATE MEMORY TABLE PUBLIC.CWORD(
    CWORD_ID INTEGER DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_950EAB2B_F27E_478F_9CF9_4EDEAD4379FA) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_950EAB2B_F27E_478F_9CF9_4EDEAD4379FA,
    CHINESE VARCHAR(30)
);          
ALTER TABLE PUBLIC.CWORD ADD CONSTRAINT PUBLIC.CONSTRAINT_3D PRIMARY KEY(CWORD_ID);            
-- 460 +/- SELECT COUNT(*) FROM PUBLIC.CWORD;  
INSERT INTO PUBLIC.CWORD(CWORD_ID, CHINESE) VALUES
(1, STRINGDECODE('\u4f60\u597d')),
(2, STRINGDECODE('\u4f60')),
(3, STRINGDECODE('\u597d')),
(4, STRINGDECODE('\u6211')),
(5, STRINGDECODE('\u5462')),
(6, STRINGDECODE('\u4e5f')),
(7, STRINGDECODE('\u5417')),
(8, STRINGDECODE('\u5f88')),
(9, STRINGDECODE('\u5fd9')),
(10, STRINGDECODE('\u7238\u7238')),
(11, STRINGDECODE('\u5988\u5988')),
(12, STRINGDECODE('\u4ed6')),
(13, STRINGDECODE('\u4ed6\u4eec')),
(14, STRINGDECODE('\u6211\u4eec')),
(15, STRINGDECODE('\u4f60\u4eec')),
(16, STRINGDECODE('\u90fd')),
(17, STRINGDECODE('\u4e0d')),
(18, STRINGDECODE('\u7537')),
(19, STRINGDECODE('\u670b\u53cb')),
(20, STRINGDECODE('\u54e5\u54e5')),
(21, STRINGDECODE('\u8981')),
(22, STRINGDECODE('\u5496\u5561')),
(23, STRINGDECODE('\u5f1f\u5f1f')),
(24, STRINGDECODE('\u559d')),
(25, STRINGDECODE('\u5979')),
(26, STRINGDECODE('\u662f')),
(27, STRINGDECODE('\u54ea')),
(28, STRINGDECODE('\u56fd')),
(29, STRINGDECODE('\u4eba')),
(30, STRINGDECODE('\u90a3')),
(31, STRINGDECODE('\u8c01')),
(32, STRINGDECODE('\u8001\u5e08')),
(33, STRINGDECODE('\u4e2d\u56fd')),
(34, STRINGDECODE('\u60a8')),
(35, STRINGDECODE('\u8fd9')),
(36, STRINGDECODE('\u5916\u8bed')),
(37, STRINGDECODE('\u533b\u751f')),
(38, STRINGDECODE('\u5976\u5976')),
(39, STRINGDECODE('\u5916\u5a46')),
(40, STRINGDECODE('\u8ba4\u8bc6')),
(41, STRINGDECODE('\u9ad8\u5174')),
(42, STRINGDECODE('\u53ef\u4ee5')),
(43, STRINGDECODE('\u8fdb')),
(44, STRINGDECODE('\u6765')),
(45, STRINGDECODE('\u8fdb\u6765')),
(46, STRINGDECODE('\u8bf7')),
(47, STRINGDECODE('\u8bb0\u8005')),
(48, STRINGDECODE('\u95ee')),
(49, STRINGDECODE('\u59d3')),
(50, STRINGDECODE('\u8d35\u59d3')),
(51, STRINGDECODE('\u8bf7\u95ee')),
(219, STRINGDECODE('\u53eb')),
(53, STRINGDECODE('\u5148\u751f')),
(54, STRINGDECODE('\u8bed\u8a00')),
(55, STRINGDECODE('\u5b66\u9662')),
(56, STRINGDECODE('\u7684')),
(57, STRINGDECODE('\u5b66\u751f')),
(58, STRINGDECODE('\u4ec0\u4e48')),
(59, STRINGDECODE('\u5b66\u4e60')),
(60, STRINGDECODE('\u6c49\u8bed')),
(61, STRINGDECODE('\u82f1\u56fd')),
(62, STRINGDECODE('\u52a0\u62ff\u5927')),
(63, STRINGDECODE('\u7f8e\u56fd')),
(64, STRINGDECODE('\u9910\u5385')),
(65, STRINGDECODE('\u5728')),
(66, STRINGDECODE('\u54ea\u513f')),
(67, STRINGDECODE('\u5bbf\u820d')),
(68, STRINGDECODE('\u5973')),
(69, STRINGDECODE('\u5750')),
(70, STRINGDECODE('\u8c22\u8c22')),
(71, STRINGDECODE('\u5bf9\u4e0d\u8d77')),
(72, STRINGDECODE('\u6ca1\u5173\u7cfb')),
(74, STRINGDECODE('\u518d\u89c1')),
(75, STRINGDECODE('\u518d')),
(76, STRINGDECODE('\u5c0f\u59d0')),
(77, STRINGDECODE('\u4e8c')),
(78, STRINGDECODE('\u5c42')),
(79, STRINGDECODE('\u56db')),
(80, STRINGDECODE('\u53f7')),
(81, STRINGDECODE('\u4e0d\u7528')),
(82, STRINGDECODE('\u8fd9\u513f')),
(83, STRINGDECODE('\u665a')),
(84, STRINGDECODE('\u4e86')),
(85, STRINGDECODE('\u51e0')),
(86, STRINGDECODE('\u5bb6')),
(87, STRINGDECODE('\u53e3')),
(88, STRINGDECODE('\u7167\u7247')),
(89, STRINGDECODE('\u548c')),
(90, STRINGDECODE('\u4e2a')),
(91, STRINGDECODE('\u59d0\u59d0')),
(140, STRINGDECODE('\u4e24')),
(93, STRINGDECODE('\u8fd8')),
(94, STRINGDECODE('\u4e00\u5171')),
(95, STRINGDECODE('\u59b9\u59b9')),
(96, STRINGDECODE('\u5c0f')),
(97, STRINGDECODE('\u72d7')),
(98, STRINGDECODE('\u5f20')),
(99, STRINGDECODE('\u5f53\u7136')),
(100, STRINGDECODE('\u771f')),
(101, STRINGDECODE('\u53ef\u7231')),
(102, STRINGDECODE('\u7231')),
(103, STRINGDECODE('\u505a')),
(104, STRINGDECODE('\u5de5\u4f5c')),
(105, STRINGDECODE('\u5927')),
(106, STRINGDECODE('\u591a\u5c11')),
(107, STRINGDECODE('\u591a')),
(108, STRINGDECODE('\u5c11')),
(288, STRINGDECODE('\u5916\u8fb9')),
(110, STRINGDECODE('\u8bed')),
(111, STRINGDECODE('\u5916\u56fd')),
(112, STRINGDECODE('\u767e')),
(113, STRINGDECODE('\u624b\u673a')),
(114, STRINGDECODE('\u53f7\u7801')),
(115, STRINGDECODE('\u98ce')),
(116, STRINGDECODE('\u51fa\u79df\u8f66')),
(117, STRINGDECODE('\u5730\u94c1')),
(118, STRINGDECODE('\u7ad9')),
(119, STRINGDECODE('\u5730\u94c1\u7ad9')),
(120, STRINGDECODE('\u6c7d\u8f66')),
(139, STRINGDECODE('\u516c\u5171\u6c7d\u8f66')),
(122, STRINGDECODE('\u6c7d\u8f66\u7ad9')); 
INSERT INTO PUBLIC.CWORD(CWORD_ID, CHINESE) VALUES
(123, STRINGDECODE('\u706b\u8f66')),
(124, STRINGDECODE('\u98de\u673a')),
(125, STRINGDECODE('\u673a\u573a')),
(126, STRINGDECODE('\u81ea\u884c\u8f66')),
(127, STRINGDECODE('\u9a91')),
(128, STRINGDECODE('\u8d70\u8def')),
(129, STRINGDECODE('\u4ece')),
(130, STRINGDECODE('\u5230')),
(131, STRINGDECODE('\u7ecf\u5e38')),
(132, STRINGDECODE('\u6bcf')),
(133, STRINGDECODE('\u6708')),
(134, STRINGDECODE('\u70b9')),
(135, STRINGDECODE('\u957f')),
(136, STRINGDECODE('\u5c0f\u65f6')),
(138, STRINGDECODE('\u5206\u949f')),
(141, STRINGDECODE('\u4eca\u5e74')),
(142, STRINGDECODE('\u5e74')),
(143, STRINGDECODE('\u5c81')),
(144, STRINGDECODE('\u8bfe')),
(145, STRINGDECODE('\u661f\u671f')),
(146, STRINGDECODE('\u4e0a\u5348')),
(147, STRINGDECODE('\u4e0a')),
(148, STRINGDECODE('\u4e0b\u5348')),
(149, STRINGDECODE('\u4e0b')),
(150, STRINGDECODE('\u661f\u671f\u65e5')),
(151, STRINGDECODE('\u751f\u65e5')),
(152, STRINGDECODE('\u751f')),
(153, STRINGDECODE('\u591a\u5927')),
(154, STRINGDECODE('\u51fa\u751f')),
(155, STRINGDECODE('\u51fa')),
(156, STRINGDECODE('\u5c5e')),
(157, STRINGDECODE('\u805a\u4f1a')),
(273, STRINGDECODE('\u4f1a')),
(159, STRINGDECODE('\u795d\u8d3a')),
(160, STRINGDECODE('\u795d')),
(161, STRINGDECODE('\u53c2\u52a0')),
(162, STRINGDECODE('\u5403')),
(163, STRINGDECODE('\u86cb\u7cd5')),
(164, STRINGDECODE('\u86cb')),
(165, STRINGDECODE('\u4e70')),
(166, STRINGDECODE('\u74f6')),
(167, STRINGDECODE('\u7ea2\u8461\u8404\u9152')),
(168, STRINGDECODE('\u7ea2')),
(169, STRINGDECODE('\u8461\u8404')),
(170, STRINGDECODE('\u9152')),
(344, STRINGDECODE('\u5feb\u4e50')),
(172, STRINGDECODE('\u6f02\u4eae')),
(173, STRINGDECODE('\u70e4\u9e2d')),
(174, STRINGDECODE('\u5bff\u9762')),
(176, STRINGDECODE('\u9762')),
(177, STRINGDECODE('\u53bb\u5e74')),
(178, STRINGDECODE('\u660e\u5e74')),
(179, STRINGDECODE('\u6628\u5929')),
(180, STRINGDECODE('\u660e\u5929')),
(181, STRINGDECODE('\u4e0a\u4e2a\u6708')),
(182, STRINGDECODE('\u4e0b\u4e2a\u6708')),
(183, STRINGDECODE('\u4e0a\u4e2a\u661f\u671f')),
(184, STRINGDECODE('\u4e0b\u4e2a\u661f\u671f')),
(185, STRINGDECODE('\u4e0a\u6b21')),
(186, STRINGDECODE('\u4e0b\u6b21')),
(187, STRINGDECODE('\u56de')),
(188, STRINGDECODE('\u4e00\u8d77')),
(189, STRINGDECODE('\u5982\u679c')),
(190, STRINGDECODE('\u706b\u9505')),
(191, STRINGDECODE('\u6709\u65f6\u5019')),
(192, STRINGDECODE('\u73a9\u513f')),
(193, STRINGDECODE('\u4f11\u606f')),
(194, STRINGDECODE('\u4f1a\u8bae')),
(195, STRINGDECODE('\u996d\u5e97')),
(196, STRINGDECODE('\u70ed')),
(197, STRINGDECODE('\u6696\u548c')),
(198, STRINGDECODE('\u51b7')),
(199, STRINGDECODE('\u51c9\u5feb')),
(200, STRINGDECODE('\u6700\u8fd1')),
(201, STRINGDECODE('\u8eab\u4f53')),
(202, STRINGDECODE('\u52a0\u73ed')),
(203, STRINGDECODE('\u544a\u8bc9')),
(204, STRINGDECODE('\u540c\u610f')),
(205, STRINGDECODE('\u4e8b\u60c5')),
(206, STRINGDECODE('\u4e0a\u73ed')),
(207, STRINGDECODE('\u4e0b\u73ed')),
(208, STRINGDECODE('\u65e9\u4e0a')),
(209, STRINGDECODE('\u4e2d\u5348')),
(210, STRINGDECODE('\u665a\u4e0a')),
(211, STRINGDECODE('\u591c\u91cc')),
(212, STRINGDECODE('\u8bb0\u4f4f')),
(213, STRINGDECODE('\u5fd8')),
(214, STRINGDECODE('\u7535\u8bdd')),
(215, STRINGDECODE('\u6253\u7535\u8bdd')),
(216, STRINGDECODE('\u5b8c')),
(217, STRINGDECODE('\u7535\u8bdd\u4f1a\u8bae')),
(218, STRINGDECODE('\u996d\u9986')),
(220, STRINGDECODE('\u4e09')),
(221, STRINGDECODE('\u4e94')),
(222, STRINGDECODE('\u516d')),
(223, STRINGDECODE('\u4e03')),
(224, STRINGDECODE('\u516b')),
(226, STRINGDECODE('\u4e5d')),
(227, STRINGDECODE('\u5341')),
(228, STRINGDECODE('\u5343')),
(229, STRINGDECODE('\u4e07')),
(230, STRINGDECODE('\u53ea')),
(231, STRINGDECODE('\u81ea\u5df1')),
(232, STRINGDECODE('\u6211\u81ea\u5df1')),
(233, STRINGDECODE('\u7236\u6bcd')),
(234, STRINGDECODE('\u56e0\u4e3a')),
(235, STRINGDECODE('\u6240\u4ee5')),
(236, STRINGDECODE('\u4fbf\u5b9c')),
(237, STRINGDECODE('\u8d77\u5e8a')),
(238, STRINGDECODE('\u5e02\u573a')),
(239, STRINGDECODE('\u5546\u5e97')),
(241, STRINGDECODE('\u5835\u8f66')),
(242, STRINGDECODE('\u4e2d\u9910')),
(243, STRINGDECODE('\u897f\u9910'));   
INSERT INTO PUBLIC.CWORD(CWORD_ID, CHINESE) VALUES
(244, STRINGDECODE('\u5047\u7684')),
(245, STRINGDECODE('\u771f\u7684')),
(246, STRINGDECODE('\u5149\u76d8')),
(343, STRINGDECODE('\u97f3\u4e50')),
(248, STRINGDECODE('\u8ddf')),
(249, STRINGDECODE('\u6709\u540d')),
(250, STRINGDECODE('\u4e66')),
(251, STRINGDECODE('\u672c\u5b50')),
(252, STRINGDECODE('\u90a3\u513f')),
(253, STRINGDECODE('\u5e08\u5085')),
(254, STRINGDECODE('\u9999\u8549')),
(255, STRINGDECODE('\u82f9\u679c')),
(256, STRINGDECODE('\u600e\u4e48')),
(257, STRINGDECODE('\u5bb9\u6613')),
(258, STRINGDECODE('\u94b1')),
(259, STRINGDECODE('\u65a4')),
(260, STRINGDECODE('\u5757')),
(261, STRINGDECODE('\u6bdb')),
(262, STRINGDECODE('\u5206')),
(263, STRINGDECODE('\u9001')),
(264, STRINGDECODE('\u7ed9')),
(265, STRINGDECODE('\u627e\u94b1')),
(266, STRINGDECODE('\u4e00\u534a')),
(268, STRINGDECODE('\u53e6\u4e00\u534a')),
(269, STRINGDECODE('\u4ed8\u8d39')),
(270, STRINGDECODE('\u82b1\u94b1')),
(271, STRINGDECODE('\u514d\u8d39')),
(272, STRINGDECODE('\u80fd')),
(274, STRINGDECODE('\u4e00\u4e0b')),
(275, STRINGDECODE('\u4e00\u4f1a')),
(276, STRINGDECODE('\u4e00\u70b9')),
(277, STRINGDECODE('\u7b49')),
(278, STRINGDECODE('\u516c\u53f8')),
(279, STRINGDECODE('\u540c\u4e8b')),
(282, STRINGDECODE('\u4e00\u6837')),
(281, STRINGDECODE('\u4e0d\u4e00\u6837')),
(283, STRINGDECODE('\u4f46\u662f')),
(284, STRINGDECODE('\u8fd8\u662f')),
(285, STRINGDECODE('\u6216\u8005')),
(286, STRINGDECODE('\u4ee5\u524d')),
(287, STRINGDECODE('\u4ee5\u540e')),
(289, STRINGDECODE('\u91cc\u8fb9')),
(290, STRINGDECODE('\u5de6')),
(291, STRINGDECODE('\u53f3')),
(292, STRINGDECODE('\u8d70\u5427')),
(293, STRINGDECODE('\u8dd1\u6b65')),
(294, STRINGDECODE('\u5feb')),
(295, STRINGDECODE('\u6162')),
(296, STRINGDECODE('\u5e94\u8be5')),
(297, STRINGDECODE('\u9700\u8981')),
(298, STRINGDECODE('\u65e9')),
(299, STRINGDECODE('\u6362')),
(300, STRINGDECODE('\u89c9\u5f97')),
(301, STRINGDECODE('\u522b\u7684')),
(302, STRINGDECODE('\u8863\u670d')),
(303, STRINGDECODE('\u5730\u65b9')),
(304, STRINGDECODE('\u6709\u7684')),
(305, STRINGDECODE('\u53f8\u673a')),
(306, STRINGDECODE('\u5dee')),
(307, STRINGDECODE('\u523b')),
(308, STRINGDECODE('\u54ea\u91cc')),
(309, STRINGDECODE('\u5b59\u5973\u513f')),
(310, STRINGDECODE('\u5973\u513f')),
(311, STRINGDECODE('\u5c81\u6570')),
(312, STRINGDECODE('\u6570')),
(313, STRINGDECODE('\u62dc\u62dc')),
(314, STRINGDECODE('\u4e3a\u4ec0\u4e48')),
(315, STRINGDECODE('\u4e1c\u897f')),
(316, STRINGDECODE('\u5199')),
(317, STRINGDECODE('\u6c49\u5b57')),
(318, STRINGDECODE('\u5ea6')),
(319, STRINGDECODE('\u89c1\u9762')),
(320, STRINGDECODE('\u4e45')),
(321, STRINGDECODE('\u8fdc')),
(345, STRINGDECODE('\u8fd1')),
(323, STRINGDECODE('\u542c\u8bf4')),
(324, STRINGDECODE('\u804a\u5929')),
(325, STRINGDECODE('\u627e')),
(326, STRINGDECODE('\u8bd5\u8bd5')),
(327, STRINGDECODE('\u83dc\u5355')),
(328, STRINGDECODE('\u70b9\u83dc')),
(329, STRINGDECODE('\u670d\u52a1\u5458')),
(330, STRINGDECODE('\u9080\u8bf7')),
(331, STRINGDECODE('\u8bf7\u5ba2')),
(332, STRINGDECODE('\u62ff')),
(333, STRINGDECODE('\u65b0')),
(334, STRINGDECODE('\u65e7')),
(335, STRINGDECODE('\u8001')),
(336, STRINGDECODE('\u5fc3')),
(337, STRINGDECODE('\u5f00\u5fc3')),
(338, STRINGDECODE('\u5c0f\u5fc3')),
(342, STRINGDECODE('\u5173\u5fc3')),
(340, STRINGDECODE('\u706f')),
(341, STRINGDECODE('\u522b')),
(346, STRINGDECODE('\u8336')),
(347, STRINGDECODE('\u8336\u53f6')),
(348, STRINGDECODE('\u77ed')),
(349, STRINGDECODE('\u4ee5\u4e3a')),
(350, STRINGDECODE('\u60f3')),
(351, STRINGDECODE('\u6563\u6b65')),
(352, STRINGDECODE('\u4eb2')),
(353, STRINGDECODE('\u63e1\u624b')),
(354, STRINGDECODE('\u79bb\u5f00')),
(355, STRINGDECODE('\u516c\u65a4')),
(356, STRINGDECODE('\u6c34\u679c')),
(357, STRINGDECODE('\u852c\u83dc')),
(358, STRINGDECODE('\u8089')),
(359, STRINGDECODE('\u666f\u8272')),
(360, STRINGDECODE('\u5e74\u7ea7')),
(361, STRINGDECODE('\u524d\u5929')),
(362, STRINGDECODE('\u540e\u5929')),
(363, STRINGDECODE('\u660e\u767d')),
(364, STRINGDECODE('\u61c2')),
(365, STRINGDECODE('\u6700\u597d')),
(366, STRINGDECODE('\u6700\u591a'));          
INSERT INTO PUBLIC.CWORD(CWORD_ID, CHINESE) VALUES
(367, STRINGDECODE('\u5531\u6b4c')),
(368, STRINGDECODE('\u66f4')),
(369, STRINGDECODE('\u8fc7')),
(370, STRINGDECODE('\u7b2c')),
(371, STRINGDECODE('\u7b2c\u4e00\u6b21')),
(372, STRINGDECODE('\u4e00\u6b21')),
(373, STRINGDECODE('\u7528')),
(374, STRINGDECODE('\u623f\u4e1c')),
(375, STRINGDECODE('\u5bb6\u5177')),
(376, STRINGDECODE('\u5de5\u8d44')),
(377, STRINGDECODE('\u5de5\u4eba')),
(378, STRINGDECODE('\u5de5\u5382')),
(379, STRINGDECODE('\u9e21\u86cb')),
(380, STRINGDECODE('\u725b\u5976')),
(381, STRINGDECODE('\u9178\u5976')),
(382, STRINGDECODE('\u679c\u6c41')),
(383, STRINGDECODE('\u5564\u9152')),
(384, STRINGDECODE('\u7ea6\u4f1a')),
(385, STRINGDECODE('\u5ba2\u4eba')),
(386, STRINGDECODE('\u4e3b\u4eba')),
(387, STRINGDECODE('\u6253\u7b97')),
(388, STRINGDECODE('\u5468\u672b')),
(389, STRINGDECODE('\u5de5\u7a0b\u5e08')),
(390, STRINGDECODE('\u6ca1\u6709\u610f\u601d')),
(391, STRINGDECODE('\u6bcf\u4e2a\u4eba')),
(392, STRINGDECODE('\u7f8e\u5143')),
(393, STRINGDECODE('\u6b27\u5143')),
(394, STRINGDECODE('\u4e09\u5206\u4e4b\u4e00')),
(395, STRINGDECODE('\u767e\u5206\u4e4b\u5341')),
(396, STRINGDECODE('\u9519')),
(397, STRINGDECODE('\u5bf9')),
(398, STRINGDECODE('\u6da8')),
(399, STRINGDECODE('\u540d\u7247')),
(400, STRINGDECODE('\u65f6\u5019')),
(401, STRINGDECODE('\u5916\u56fd\u4eba')),
(402, STRINGDECODE('\u4e2d\u6587')),
(403, STRINGDECODE('\u4e2d\u56fd\u4eba')),
(404, STRINGDECODE('\u7136\u540e')),
(405, STRINGDECODE('\u600e\u4e48\u6837')),
(406, STRINGDECODE('\u533b\u9662')),
(407, STRINGDECODE('\u4eca\u5929')),
(408, STRINGDECODE('\u610f\u601d')),
(409, STRINGDECODE('\u6709\u610f\u601d')),
(410, STRINGDECODE('\u5168\u8eab')),
(411, STRINGDECODE('\u5168')),
(412, STRINGDECODE('\u8212\u670d')),
(413, STRINGDECODE('\u953b\u70bc')),
(414, STRINGDECODE('\u5934')),
(415, STRINGDECODE('\u75bc')),
(477, STRINGDECODE('\u55d3\u5b50')),
(417, STRINGDECODE('\u770b\u75c5')),
(418, STRINGDECODE('\u75c5')),
(419, STRINGDECODE('\u7a7f')),
(420, STRINGDECODE('\u6709\u70b9\u513f')),
(421, STRINGDECODE('\u53d1\u708e')),
(422, STRINGDECODE('\u53d1\u70e7')),
(423, STRINGDECODE('\u70e7')),
(424, STRINGDECODE('\u611f\u5192')),
(425, STRINGDECODE('\u4f4f\u9662')),
(426, STRINGDECODE('\u6c34')),
(427, STRINGDECODE('\u836f')),
(428, STRINGDECODE('\u613f\u610f')),
(429, STRINGDECODE('\u897f')),
(430, STRINGDECODE('\u4e1c')),
(431, STRINGDECODE('\u5317')),
(432, STRINGDECODE('\u5357')),
(433, STRINGDECODE('\u4fee')),
(434, STRINGDECODE('\u5e2e')),
(435, STRINGDECODE('\u574f')),
(436, STRINGDECODE('\u8f6f\u4ef6')),
(478, STRINGDECODE('\u8f6f')),
(438, STRINGDECODE('\u786c')),
(439, STRINGDECODE('\u91cd\u8981')),
(440, STRINGDECODE('\u8001\u5a46')),
(441, STRINGDECODE('\u7231\u4eba')),
(442, STRINGDECODE('\u8001\u516c')),
(443, STRINGDECODE('\u4eb2\u7231\u7684')),
(444, STRINGDECODE('\u56de\u6765')),
(445, STRINGDECODE('\u5e0c\u671b')),
(446, STRINGDECODE('\u7167\u76f8')),
(447, STRINGDECODE('\u7167\u76f8\u673a')),
(448, STRINGDECODE('\u5230\u4e86')),
(449, STRINGDECODE('\u505c\u8f66')),
(450, STRINGDECODE('\u505c\u6b62')),
(451, STRINGDECODE('\u4ece\u4e0d')),
(452, STRINGDECODE('\u4ece\u6ca1')),
(453, STRINGDECODE('\u5e26')),
(454, STRINGDECODE('\u62a4\u7167')),
(455, STRINGDECODE('\u7b7e\u8bc1')),
(456, STRINGDECODE('\u7a7a')),
(457, STRINGDECODE('\u4e66\u5305')),
(458, STRINGDECODE('\u884c\u674e')),
(459, STRINGDECODE('\u722c')),
(460, STRINGDECODE('\u9999\u6c34')),
(461, STRINGDECODE('\u684c\u5b50')),
(462, STRINGDECODE('\u56f0')),
(463, STRINGDECODE('\u521a\u624d')),
(464, STRINGDECODE('\u4e0d\u9519')),
(465, STRINGDECODE('\u5446')),
(466, STRINGDECODE('\u5446\u5230')),
(467, STRINGDECODE('\u5f97')),
(468, STRINGDECODE('\u7b7e\u5b57')),
(469, STRINGDECODE('\u603b\u662f')),
(473, STRINGDECODE('\u4e00\u76f4')),
(471, STRINGDECODE('\u8db3\u7403')),
(472, STRINGDECODE('\u6bd4\u8d5b')),
(474, STRINGDECODE('\u5317\u4eac')),
(475, STRINGDECODE('\u6bcf\u6b21')),
(476, STRINGDECODE('\u53bb')),
(479, STRINGDECODE('\u56de\u5bb6')); 
CREATE MEMORY TABLE PUBLIC.CHARACTER_SCORE(
    SCORE INT,
    HANZI VARCHAR(2) NOT NULL
);    
-- 422 +/- SELECT COUNT(*) FROM PUBLIC.CHARACTER_SCORE;        
INSERT INTO PUBLIC.CHARACTER_SCORE(SCORE, HANZI) VALUES
(75, STRINGDECODE('\u4f60')),
(98, STRINGDECODE('\u597d')),
(93, STRINGDECODE('\u6211')),
(99, STRINGDECODE('\u5462')),
(96, STRINGDECODE('\u4e5f')),
(98, STRINGDECODE('\u5417')),
(93, STRINGDECODE('\u5f88')),
(75, STRINGDECODE('\u5fd9')),
(33, STRINGDECODE('\u7238')),
(60, STRINGDECODE('\u5988')),
(98, STRINGDECODE('\u4ed6')),
(93, STRINGDECODE('\u4eec')),
(98, STRINGDECODE('\u90fd')),
(92, STRINGDECODE('\u4e0d')),
(96, STRINGDECODE('\u7537')),
(87, STRINGDECODE('\u670b')),
(96, STRINGDECODE('\u53cb')),
(87, STRINGDECODE('\u54e5')),
(16, STRINGDECODE('\u8981')),
(93, STRINGDECODE('\u5496')),
(93, STRINGDECODE('\u5561')),
(49, STRINGDECODE('\u5f1f')),
(87, STRINGDECODE('\u559d')),
(22, STRINGDECODE('\u5979')),
(93, STRINGDECODE('\u662f')),
(98, STRINGDECODE('\u54ea')),
(75, STRINGDECODE('\u56fd')),
(93, STRINGDECODE('\u4eba')),
(75, STRINGDECODE('\u90a3')),
(93, STRINGDECODE('\u8c01')),
(99, STRINGDECODE('\u8001')),
(75, STRINGDECODE('\u5e08')),
(87, STRINGDECODE('\u4e2d')),
(24, STRINGDECODE('\u60a8')),
(93, STRINGDECODE('\u8fd9')),
(87, STRINGDECODE('\u5916')),
(93, STRINGDECODE('\u8bed')),
(98, STRINGDECODE('\u533b')),
(75, STRINGDECODE('\u751f')),
(0, STRINGDECODE('\u5976')),
(75, STRINGDECODE('\u5a46')),
(0, STRINGDECODE('\u8ba4')),
(0, STRINGDECODE('\u8bc6')),
(99, STRINGDECODE('\u9ad8')),
(50, STRINGDECODE('\u5174')),
(75, STRINGDECODE('\u53ef')),
(93, STRINGDECODE('\u4ee5')),
(50, STRINGDECODE('\u8fdb')),
(50, STRINGDECODE('\u6765')),
(75, STRINGDECODE('\u8bf7')),
(50, STRINGDECODE('\u8bb0')),
(96, STRINGDECODE('\u8005')),
(87, STRINGDECODE('\u95ee')),
(87, STRINGDECODE('\u59d3')),
(87, STRINGDECODE('\u8d35')),
(75, STRINGDECODE('\u53eb')),
(93, STRINGDECODE('\u5148')),
(50, STRINGDECODE('\u8a00')),
(93, STRINGDECODE('\u5b66')),
(28, STRINGDECODE('\u9662')),
(75, STRINGDECODE('\u7684')),
(75, STRINGDECODE('\u4ec0')),
(98, STRINGDECODE('\u4e48')),
(24, STRINGDECODE('\u4e60')),
(96, STRINGDECODE('\u6c49')),
(87, STRINGDECODE('\u82f1')),
(93, STRINGDECODE('\u52a0')),
(96, STRINGDECODE('\u62ff')),
(93, STRINGDECODE('\u5927')),
(98, STRINGDECODE('\u7f8e')),
(98, STRINGDECODE('\u9910')),
(87, STRINGDECODE('\u5385')),
(87, STRINGDECODE('\u5728')),
(49, STRINGDECODE('\u513f')),
(50, STRINGDECODE('\u5bbf')),
(75, STRINGDECODE('\u820d')),
(49, STRINGDECODE('\u5973')),
(93, STRINGDECODE('\u5750')),
(49, STRINGDECODE('\u8c22')),
(96, STRINGDECODE('\u5bf9')),
(75, STRINGDECODE('\u8d77')),
(87, STRINGDECODE('\u6ca1')),
(87, STRINGDECODE('\u5173')),
(50, STRINGDECODE('\u7cfb')),
(93, STRINGDECODE('\u518d')),
(93, STRINGDECODE('\u89c1')),
(96, STRINGDECODE('\u5c0f')),
(93, STRINGDECODE('\u59d0')),
(75, STRINGDECODE('\u4e8c')),
(98, STRINGDECODE('\u5c42')),
(75, STRINGDECODE('\u56db')),
(75, STRINGDECODE('\u53f7')),
(50, STRINGDECODE('\u7528')),
(93, STRINGDECODE('\u665a')),
(96, STRINGDECODE('\u4e86')),
(98, STRINGDECODE('\u51e0')),
(93, STRINGDECODE('\u53e3')),
(50, STRINGDECODE('\u7167')),
(87, STRINGDECODE('\u7247')),
(22, STRINGDECODE('\u548c')),
(50, STRINGDECODE('\u4e2a')),
(31, STRINGDECODE('\u4e24')),
(99, STRINGDECODE('\u8fd8')),
(87, STRINGDECODE('\u4e00')),
(75, STRINGDECODE('\u5171')),
(44, STRINGDECODE('\u59b9')),
(93, STRINGDECODE('\u72d7')),
(87, STRINGDECODE('\u5f20')),
(75, STRINGDECODE('\u5f53')),
(93, STRINGDECODE('\u7136')),
(30, STRINGDECODE('\u771f')),
(96, STRINGDECODE('\u7231')),
(93, STRINGDECODE('\u505a')),
(87, STRINGDECODE('\u5de5')),
(93, STRINGDECODE('\u4f5c')),
(75, STRINGDECODE('\u591a')),
(49, STRINGDECODE('\u5c11')),
(75, STRINGDECODE('\u767e')),
(98, STRINGDECODE('\u624b')),
(50, STRINGDECODE('\u673a')),
(62, STRINGDECODE('\u7801')),
(96, STRINGDECODE('\u98ce')),
(93, STRINGDECODE('\u51fa')),
(50, STRINGDECODE('\u79df')),
(96, STRINGDECODE('\u8f66')),
(87, STRINGDECODE('\u5730')),
(58, STRINGDECODE('\u94c1')),
(87, STRINGDECODE('\u7ad9')),
(98, STRINGDECODE('\u6c7d')),
(75, STRINGDECODE('\u516c')),
(93, STRINGDECODE('\u706b')),
(50, STRINGDECODE('\u98de')),
(79, STRINGDECODE('\u573a')),
(93, STRINGDECODE('\u81ea')),
(75, STRINGDECODE('\u884c'));         
INSERT INTO PUBLIC.CHARACTER_SCORE(SCORE, HANZI) VALUES
(75, STRINGDECODE('\u9a91')),
(87, STRINGDECODE('\u8d70')),
(16, STRINGDECODE('\u8def')),
(87, STRINGDECODE('\u4ece')),
(98, STRINGDECODE('\u5230')),
(75, STRINGDECODE('\u7ecf')),
(0, STRINGDECODE('\u5e38')),
(87, STRINGDECODE('\u6bcf')),
(16, STRINGDECODE('\u6708')),
(66, STRINGDECODE('\u70b9')),
(50, STRINGDECODE('\u957f')),
(75, STRINGDECODE('\u65f6')),
(50, STRINGDECODE('\u949f')),
(87, STRINGDECODE('\u5206')),
(98, STRINGDECODE('\u4eca')),
(87, STRINGDECODE('\u5e74')),
(75, STRINGDECODE('\u5c81')),
(87, STRINGDECODE('\u8bfe')),
(87, STRINGDECODE('\u661f')),
(87, STRINGDECODE('\u671f')),
(75, STRINGDECODE('\u4e0a')),
(87, STRINGDECODE('\u5348')),
(87, STRINGDECODE('\u4e0b')),
(93, STRINGDECODE('\u65e5')),
(0, STRINGDECODE('\u5c5e')),
(93, STRINGDECODE('\u805a')),
(49, STRINGDECODE('\u4f1a')),
(50, STRINGDECODE('\u795d')),
(75, STRINGDECODE('\u8d3a')),
(96, STRINGDECODE('\u53c2')),
(99, STRINGDECODE('\u5403')),
(50, STRINGDECODE('\u86cb')),
(87, STRINGDECODE('\u7cd5')),
(87, STRINGDECODE('\u4e70')),
(87, STRINGDECODE('\u74f6')),
(50, STRINGDECODE('\u7ea2')),
(50, STRINGDECODE('\u8461')),
(50, STRINGDECODE('\u8404')),
(75, STRINGDECODE('\u9152')),
(96, STRINGDECODE('\u5feb')),
(76, STRINGDECODE('\u4e50')),
(58, STRINGDECODE('\u6f02')),
(75, STRINGDECODE('\u4eae')),
(50, STRINGDECODE('\u70e4')),
(54, STRINGDECODE('\u9e2d')),
(50, STRINGDECODE('\u5bff')),
(0, STRINGDECODE('\u9762')),
(96, STRINGDECODE('\u53bb')),
(98, STRINGDECODE('\u660e')),
(58, STRINGDECODE('\u6628')),
(87, STRINGDECODE('\u5929')),
(96, STRINGDECODE('\u6b21')),
(87, STRINGDECODE('\u5982')),
(89, STRINGDECODE('\u679c')),
(50, STRINGDECODE('\u9505')),
(93, STRINGDECODE('\u6709')),
(0, STRINGDECODE('\u5019')),
(19, STRINGDECODE('\u73a9')),
(93, STRINGDECODE('\u4f11')),
(87, STRINGDECODE('\u606f')),
(0, STRINGDECODE('\u8bae')),
(50, STRINGDECODE('\u996d')),
(93, STRINGDECODE('\u5e97')),
(96, STRINGDECODE('\u70ed')),
(24, STRINGDECODE('\u6696')),
(99, STRINGDECODE('\u51b7')),
(58, STRINGDECODE('\u51c9')),
(87, STRINGDECODE('\u6700')),
(50, STRINGDECODE('\u8fd1')),
(75, STRINGDECODE('\u8eab')),
(52, STRINGDECODE('\u4f53')),
(50, STRINGDECODE('\u73ed')),
(75, STRINGDECODE('\u544a')),
(75, STRINGDECODE('\u8bc9')),
(50, STRINGDECODE('\u540c')),
(50, STRINGDECODE('\u610f')),
(50, STRINGDECODE('\u4e8b')),
(75, STRINGDECODE('\u60c5')),
(87, STRINGDECODE('\u65e9')),
(52, STRINGDECODE('\u591c')),
(98, STRINGDECODE('\u91cc')),
(75, STRINGDECODE('\u4f4f')),
(16, STRINGDECODE('\u5fd8')),
(0, STRINGDECODE('\u7535')),
(87, STRINGDECODE('\u8bdd')),
(93, STRINGDECODE('\u6253')),
(51, STRINGDECODE('\u5b8c')),
(93, STRINGDECODE('\u9986')),
(75, STRINGDECODE('\u4e09')),
(87, STRINGDECODE('\u4e94')),
(75, STRINGDECODE('\u516d')),
(75, STRINGDECODE('\u4e03')),
(65, STRINGDECODE('\u516b')),
(96, STRINGDECODE('\u4e5d')),
(87, STRINGDECODE('\u5341')),
(75, STRINGDECODE('\u5343')),
(75, STRINGDECODE('\u4e07')),
(98, STRINGDECODE('\u53ea')),
(52, STRINGDECODE('\u5df1')),
(75, STRINGDECODE('\u7236')),
(89, STRINGDECODE('\u6bcd')),
(96, STRINGDECODE('\u56e0')),
(24, STRINGDECODE('\u4e3a')),
(62, STRINGDECODE('\u6240')),
(75, STRINGDECODE('\u4fbf')),
(58, STRINGDECODE('\u5b9c')),
(75, STRINGDECODE('\u5e8a')),
(87, STRINGDECODE('\u5e02')),
(87, STRINGDECODE('\u5546')),
(0, STRINGDECODE('\u5835')),
(50, STRINGDECODE('\u897f')),
(98, STRINGDECODE('\u5047')),
(87, STRINGDECODE('\u5149')),
(50, STRINGDECODE('\u76d8')),
(50, STRINGDECODE('\u97f3')),
(76, STRINGDECODE('\u8ddf')),
(87, STRINGDECODE('\u540d')),
(50, STRINGDECODE('\u4e66')),
(89, STRINGDECODE('\u672c')),
(87, STRINGDECODE('\u5b50')),
(5, STRINGDECODE('\u5085')),
(75, STRINGDECODE('\u9999')),
(0, STRINGDECODE('\u8549')),
(93, STRINGDECODE('\u82f9')),
(75, STRINGDECODE('\u600e')),
(87, STRINGDECODE('\u5bb9')),
(50, STRINGDECODE('\u6613')),
(50, STRINGDECODE('\u94b1')),
(50, STRINGDECODE('\u65a4')),
(87, STRINGDECODE('\u5757')),
(87, STRINGDECODE('\u6bdb')),
(50, STRINGDECODE('\u9001')),
(50, STRINGDECODE('\u7ed9')),
(93, STRINGDECODE('\u627e')),
(99, STRINGDECODE('\u534a')),
(8, STRINGDECODE('\u53e6'));  
INSERT INTO PUBLIC.CHARACTER_SCORE(SCORE, HANZI) VALUES
(59, STRINGDECODE('\u4ed8')),
(62, STRINGDECODE('\u8d39')),
(87, STRINGDECODE('\u82b1')),
(28, STRINGDECODE('\u514d')),
(87, STRINGDECODE('\u80fd')),
(75, STRINGDECODE('\u7b49')),
(75, STRINGDECODE('\u53f8')),
(96, STRINGDECODE('\u6837')),
(75, STRINGDECODE('\u4f46')),
(50, STRINGDECODE('\u6216')),
(93, STRINGDECODE('\u524d')),
(75, STRINGDECODE('\u540e')),
(0, STRINGDECODE('\u8fb9')),
(16, STRINGDECODE('\u5de6')),
(75, STRINGDECODE('\u53f3')),
(87, STRINGDECODE('\u5427')),
(75, STRINGDECODE('\u8dd1')),
(64, STRINGDECODE('\u6b65')),
(58, STRINGDECODE('\u6162')),
(75, STRINGDECODE('\u5e94')),
(58, STRINGDECODE('\u8be5')),
(16, STRINGDECODE('\u9700')),
(50, STRINGDECODE('\u6362')),
(66, STRINGDECODE('\u89c9')),
(10, STRINGDECODE('\u5f97')),
(87, STRINGDECODE('\u522b')),
(50, STRINGDECODE('\u8863')),
(48, STRINGDECODE('\u670d')),
(16, STRINGDECODE('\u65b9')),
(75, STRINGDECODE('\u5dee')),
(96, STRINGDECODE('\u523b')),
(75, STRINGDECODE('\u5b59')),
(49, STRINGDECODE('\u6570')),
(50, STRINGDECODE('\u62dc')),
(75, STRINGDECODE('\u4e1c')),
(87, STRINGDECODE('\u5199')),
(93, STRINGDECODE('\u5b57')),
(93, STRINGDECODE('\u5ea6')),
(93, STRINGDECODE('\u4e45')),
(0, STRINGDECODE('\u8fdc')),
(98, STRINGDECODE('\u542c')),
(93, STRINGDECODE('\u8bf4')),
(0, STRINGDECODE('\u804a')),
(93, STRINGDECODE('\u8bd5')),
(75, STRINGDECODE('\u83dc')),
(93, STRINGDECODE('\u5355')),
(87, STRINGDECODE('\u52a1')),
(87, STRINGDECODE('\u5458')),
(50, STRINGDECODE('\u9080')),
(75, STRINGDECODE('\u5ba2')),
(87, STRINGDECODE('\u65b0')),
(50, STRINGDECODE('\u65e7')),
(96, STRINGDECODE('\u5fc3')),
(87, STRINGDECODE('\u5f00')),
(50, STRINGDECODE('\u706f')),
(50, STRINGDECODE('\u8336')),
(87, STRINGDECODE('\u53f6')),
(0, STRINGDECODE('\u77ed')),
(93, STRINGDECODE('\u60f3')),
(24, STRINGDECODE('\u6563')),
(58, STRINGDECODE('\u4eb2')),
(0, STRINGDECODE('\u63e1')),
(0, STRINGDECODE('\u79bb')),
(75, STRINGDECODE('\u6c34')),
(87, STRINGDECODE('\u852c')),
(75, STRINGDECODE('\u8089')),
(50, STRINGDECODE('\u666f')),
(50, STRINGDECODE('\u8272')),
(0, STRINGDECODE('\u7ea7')),
(50, STRINGDECODE('\u767d')),
(58, STRINGDECODE('\u61c2')),
(0, STRINGDECODE('\u5531')),
(66, STRINGDECODE('\u6b4c')),
(87, STRINGDECODE('\u66f4')),
(16, STRINGDECODE('\u8fc7')),
(50, STRINGDECODE('\u7b2c')),
(50, STRINGDECODE('\u623f')),
(58, STRINGDECODE('\u5177')),
(50, STRINGDECODE('\u8d44')),
(93, STRINGDECODE('\u5382')),
(75, STRINGDECODE('\u9e21')),
(50, STRINGDECODE('\u725b')),
(16, STRINGDECODE('\u9178')),
(75, STRINGDECODE('\u6c41')),
(75, STRINGDECODE('\u5564')),
(58, STRINGDECODE('\u7ea6')),
(0, STRINGDECODE('\u4e3b')),
(50, STRINGDECODE('\u7b97')),
(75, STRINGDECODE('\u5468')),
(0, STRINGDECODE('\u672b')),
(50, STRINGDECODE('\u7a0b')),
(50, STRINGDECODE('\u601d')),
(87, STRINGDECODE('\u5143')),
(50, STRINGDECODE('\u6b27')),
(87, STRINGDECODE('\u4e4b')),
(93, STRINGDECODE('\u9519')),
(79, STRINGDECODE('\u6da8')),
(50, STRINGDECODE('\u6587')),
(16, STRINGDECODE('\u5168')),
(0, STRINGDECODE('\u8212')),
(0, STRINGDECODE('\u953b')),
(0, STRINGDECODE('\u70bc')),
(50, STRINGDECODE('\u5934')),
(0, STRINGDECODE('\u75bc')),
(50, STRINGDECODE('\u55d3')),
(75, STRINGDECODE('\u770b')),
(50, STRINGDECODE('\u75c5')),
(0, STRINGDECODE('\u7a7f')),
(75, STRINGDECODE('\u53d1')),
(0, STRINGDECODE('\u708e')),
(0, STRINGDECODE('\u70e7')),
(0, STRINGDECODE('\u611f')),
(0, STRINGDECODE('\u5192')),
(50, STRINGDECODE('\u836f')),
(16, STRINGDECODE('\u613f')),
(75, STRINGDECODE('\u5317')),
(75, STRINGDECODE('\u5357')),
(50, STRINGDECODE('\u4fee')),
(75, STRINGDECODE('\u5e2e')),
(58, STRINGDECODE('\u574f')),
(0, STRINGDECODE('\u8f6f')),
(0, STRINGDECODE('\u4ef6')),
(0, STRINGDECODE('\u786c')),
(50, STRINGDECODE('\u91cd')),
(0, STRINGDECODE('\u5e0c')),
(16, STRINGDECODE('\u671b')),
(16, STRINGDECODE('\u76f8')),
(0, STRINGDECODE('\u505c')),
(50, STRINGDECODE('\u6b62')),
(75, STRINGDECODE('\u5e26')),
(50, STRINGDECODE('\u62a4')),
(50, STRINGDECODE('\u7b7e')),
(50, STRINGDECODE('\u8bc1')),
(50, STRINGDECODE('\u7a7a')),
(50, STRINGDECODE('\u5305')),
(75, STRINGDECODE('\u674e'));
INSERT INTO PUBLIC.CHARACTER_SCORE(SCORE, HANZI) VALUES
(87, STRINGDECODE('\u722c')),
(50, STRINGDECODE('\u684c')),
(16, STRINGDECODE('\u56f0')),
(19, STRINGDECODE('\u521a')),
(50, STRINGDECODE('\u624d')),
(0, STRINGDECODE('\u5446')),
(0, STRINGDECODE('\u603b')),
(0, STRINGDECODE('\u76f4')),
(50, STRINGDECODE('\u8db3')),
(50, STRINGDECODE('\u7403')),
(75, STRINGDECODE('\u6bd4')),
(50, STRINGDECODE('\u8d5b')),
(50, STRINGDECODE('\u4eac')),
(20, STRINGDECODE('\u56de')),
(20, STRINGDECODE('\u5bb6'));         
CREATE PRIMARY KEY PUBLIC.PRIMARY_KEY_CF ON PUBLIC.CHARACTER_SCORE(HANZI);     
CREATE MEMORY TABLE PUBLIC.CHARACTER_PINYIN(
    CHARACTER_PINYIN_ID INTEGER DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_3633ED31_F013_4EC3_AC8B_CF465C7B686B) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_3633ED31_F013_4EC3_AC8B_CF465C7B686B,
    PINYIN VARCHAR(10),
    TONE INTEGER,
    HANZI VARCHAR(2)
);             
-- 440 +/- SELECT COUNT(*) FROM PUBLIC.CHARACTER_PINYIN;       
INSERT INTO PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID, PINYIN, TONE, HANZI) VALUES
(1, 'ni', 3, STRINGDECODE('\u4f60')),
(2, 'hao', 3, STRINGDECODE('\u597d')),
(3, 'wo', 3, STRINGDECODE('\u6211')),
(321, 'fu', 2, STRINGDECODE('\u670d')),
(5, 'ye', 3, STRINGDECODE('\u4e5f')),
(371, 'bai', 0, STRINGDECODE('\u767d')),
(7, 'hen', 3, STRINGDECODE('\u5f88')),
(8, 'mang', 2, STRINGDECODE('\u5fd9')),
(10, 'ba', 0, STRINGDECODE('\u7238')),
(334, 'zi', 0, STRINGDECODE('\u5b57')),
(12, 'ma', 0, STRINGDECODE('\u5988')),
(266, 'xi', 1, STRINGDECODE('\u897f')),
(13, 'ta', 1, STRINGDECODE('\u4ed6')),
(329, 'shu', 4, STRINGDECODE('\u6570')),
(15, 'dou', 1, STRINGDECODE('\u90fd')),
(16, 'bu', 4, STRINGDECODE('\u4e0d')),
(17, 'nan', 2, STRINGDECODE('\u7537')),
(18, 'peng', 2, STRINGDECODE('\u670b')),
(82, 'nv', 3, STRINGDECODE('\u5973')),
(21, 'ge', 0, STRINGDECODE('\u54e5')),
(445, 'dei', 3, STRINGDECODE('\u5f97')),
(22, 'yao', 4, STRINGDECODE('\u8981')),
(23, 'ka', 1, STRINGDECODE('\u5496')),
(24, 'fei', 1, STRINGDECODE('\u5561')),
(26, 'di', 0, STRINGDECODE('\u5f1f')),
(309, 'ba', 0, STRINGDECODE('\u5427')),
(27, 'he', 1, STRINGDECODE('\u559d')),
(28, 'ta', 1, STRINGDECODE('\u5979')),
(29, 'shi', 4, STRINGDECODE('\u662f')),
(30, 'na', 3, STRINGDECODE('\u54ea')),
(31, 'guo', 2, STRINGDECODE('\u56fd')),
(32, 'ren', 2, STRINGDECODE('\u4eba')),
(33, 'na', 4, STRINGDECODE('\u90a3')),
(34, 'shei', 2, STRINGDECODE('\u8c01')),
(35, 'lao', 3, STRINGDECODE('\u8001')),
(36, 'shi', 1, STRINGDECODE('\u5e08')),
(37, 'zhong', 1, STRINGDECODE('\u4e2d')),
(38, 'nin', 2, STRINGDECODE('\u60a8')),
(39, 'zhe', 4, STRINGDECODE('\u8fd9')),
(40, 'wai', 4, STRINGDECODE('\u5916')),
(41, 'yu', 3, STRINGDECODE('\u8bed')),
(42, 'yi', 1, STRINGDECODE('\u533b')),
(43, 'sheng', 1, STRINGDECODE('\u751f')),
(45, 'nai', 0, STRINGDECODE('\u5976')),
(276, 'fu', 0, STRINGDECODE('\u5085')),
(46, 'po', 2, STRINGDECODE('\u5a46')),
(47, 'ren', 4, STRINGDECODE('\u8ba4')),
(275, 'zi', 0, STRINGDECODE('\u5b50')),
(49, 'gao', 1, STRINGDECODE('\u9ad8')),
(50, 'xing', 4, STRINGDECODE('\u5174')),
(51, 'ke', 3, STRINGDECODE('\u53ef')),
(52, 'yi', 3, STRINGDECODE('\u4ee5')),
(53, 'jin', 4, STRINGDECODE('\u8fdb')),
(54, 'lai', 2, STRINGDECODE('\u6765')),
(55, 'qing', 3, STRINGDECODE('\u8bf7')),
(56, 'ji', 4, STRINGDECODE('\u8bb0')),
(57, 'zhe', 3, STRINGDECODE('\u8005')),
(58, 'wen', 4, STRINGDECODE('\u95ee')),
(59, 'xing', 4, STRINGDECODE('\u59d3')),
(60, 'gui', 4, STRINGDECODE('\u8d35')),
(241, 'jiao', 4, STRINGDECODE('\u53eb')),
(62, 'xian', 1, STRINGDECODE('\u5148')),
(63, 'yan', 2, STRINGDECODE('\u8a00')),
(64, 'xue', 2, STRINGDECODE('\u5b66')),
(65, 'yuan', 4, STRINGDECODE('\u9662')),
(108, 'he', 2, STRINGDECODE('\u548c')),
(67, 'shen', 2, STRINGDECODE('\u4ec0')),
(208, 'hou', 0, STRINGDECODE('\u5019')),
(192, 'liang', 0, STRINGDECODE('\u4eae')),
(70, 'han', 4, STRINGDECODE('\u6c49')),
(71, 'ying', 1, STRINGDECODE('\u82f1')),
(72, 'jia', 1, STRINGDECODE('\u52a0')),
(73, 'na', 2, STRINGDECODE('\u62ff')),
(74, 'da', 4, STRINGDECODE('\u5927')),
(75, 'mei', 3, STRINGDECODE('\u7f8e')),
(76, 'can', 1, STRINGDECODE('\u9910')),
(77, 'ting', 1, STRINGDECODE('\u5385')),
(78, 'zai', 4, STRINGDECODE('\u5728')),
(187, 'tao', 0, STRINGDECODE('\u8404')),
(80, 'su', 4, STRINGDECODE('\u5bbf')),
(81, 'she', 4, STRINGDECODE('\u820d')),
(326, 'nv', 0, STRINGDECODE('\u5973')),
(83, 'zuo', 4, STRINGDECODE('\u5750')),
(85, 'xie', 0, STRINGDECODE('\u8c22')),
(127, 'shao', 3, STRINGDECODE('\u5c11')),
(86, 'dui', 4, STRINGDECODE('\u5bf9')),
(87, 'qi', 3, STRINGDECODE('\u8d77')),
(88, 'mei', 2, STRINGDECODE('\u6ca1')),
(89, 'guan', 1, STRINGDECODE('\u5173')),
(114, 'mei', 4, STRINGDECODE('\u59b9')),
(92, 'zai', 4, STRINGDECODE('\u518d')),
(93, 'jian', 4, STRINGDECODE('\u89c1')),
(94, 'xiao', 3, STRINGDECODE('\u5c0f')),
(95, 'jie', 3, STRINGDECODE('\u59d0')),
(96, 'er', 4, STRINGDECODE('\u4e8c')),
(97, 'ceng', 2, STRINGDECODE('\u5c42')),
(98, 'si', 4, STRINGDECODE('\u56db')),
(99, 'hao', 4, STRINGDECODE('\u53f7')),
(100, 'yong', 4, STRINGDECODE('\u7528')),
(101, 'wan', 3, STRINGDECODE('\u665a')),
(102, 'le', 0, STRINGDECODE('\u4e86')); 
INSERT INTO PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID, PINYIN, TONE, HANZI) VALUES
(103, 'ji', 3, STRINGDECODE('\u51e0')),
(104, 'jia', 1, STRINGDECODE('\u5bb6')),
(105, 'kou', 3, STRINGDECODE('\u53e3')),
(106, 'zhao', 4, STRINGDECODE('\u7167')),
(107, 'pian', 4, STRINGDECODE('\u7247')),
(217, 'huo', 0, STRINGDECODE('\u548c')),
(109, 'ge', 4, STRINGDECODE('\u4e2a')),
(163, 'liang', 3, STRINGDECODE('\u4e24')),
(111, 'hai', 2, STRINGDECODE('\u8fd8')),
(203, 'yi', 1, STRINGDECODE('\u4e00')),
(113, 'gong', 4, STRINGDECODE('\u5171')),
(115, 'mei', 0, STRINGDECODE('\u59b9')),
(90, 'xi', 0, STRINGDECODE('\u7cfb')),
(116, 'gou', 3, STRINGDECODE('\u72d7')),
(117, 'zhang', 1, STRINGDECODE('\u5f20')),
(118, 'dang', 1, STRINGDECODE('\u5f53')),
(119, 'ran', 2, STRINGDECODE('\u7136')),
(120, 'zhen', 1, STRINGDECODE('\u771f')),
(121, 'ai', 4, STRINGDECODE('\u7231')),
(122, 'zuo', 4, STRINGDECODE('\u505a')),
(123, 'gong', 1, STRINGDECODE('\u5de5')),
(124, 'zuo', 4, STRINGDECODE('\u4f5c')),
(125, 'duo', 1, STRINGDECODE('\u591a')),
(84, 'xie', 4, STRINGDECODE('\u8c22')),
(126, 'shao', 0, STRINGDECODE('\u5c11')),
(128, 'bai', 3, STRINGDECODE('\u767e')),
(129, 'shou', 3, STRINGDECODE('\u624b')),
(130, 'ji', 1, STRINGDECODE('\u673a')),
(131, 'ma', 3, STRINGDECODE('\u7801')),
(132, 'feng', 1, STRINGDECODE('\u98ce')),
(133, 'chu', 1, STRINGDECODE('\u51fa')),
(134, 'zu', 1, STRINGDECODE('\u79df')),
(135, 'che', 1, STRINGDECODE('\u8f66')),
(136, 'di', 4, STRINGDECODE('\u5730')),
(137, 'tie', 3, STRINGDECODE('\u94c1')),
(138, 'zhan', 4, STRINGDECODE('\u7ad9')),
(139, 'qi', 4, STRINGDECODE('\u6c7d')),
(162, 'gong', 1, STRINGDECODE('\u516c')),
(141, 'huo', 3, STRINGDECODE('\u706b')),
(142, 'fei', 1, STRINGDECODE('\u98de')),
(143, 'chang', 3, STRINGDECODE('\u573a')),
(144, 'zi', 4, STRINGDECODE('\u81ea')),
(145, 'xing', 2, STRINGDECODE('\u884c')),
(146, 'qi', 2, STRINGDECODE('\u9a91')),
(147, 'zou', 3, STRINGDECODE('\u8d70')),
(148, 'lu', 4, STRINGDECODE('\u8def')),
(149, 'cong', 2, STRINGDECODE('\u4ece')),
(150, 'dao', 4, STRINGDECODE('\u5230')),
(151, 'jing', 1, STRINGDECODE('\u7ecf')),
(152, 'chang', 2, STRINGDECODE('\u5e38')),
(153, 'mei', 3, STRINGDECODE('\u6bcf')),
(154, 'yue', 4, STRINGDECODE('\u6708')),
(155, 'dian', 3, STRINGDECODE('\u70b9')),
(156, 'chang', 2, STRINGDECODE('\u957f')),
(157, 'shi', 2, STRINGDECODE('\u65f6')),
(161, 'zhong', 1, STRINGDECODE('\u949f')),
(160, 'fen', 1, STRINGDECODE('\u5206')),
(164, 'jin', 1, STRINGDECODE('\u4eca')),
(165, 'nian', 2, STRINGDECODE('\u5e74')),
(166, 'sui', 4, STRINGDECODE('\u5c81')),
(167, 'ke', 4, STRINGDECODE('\u8bfe')),
(168, 'xing', 1, STRINGDECODE('\u661f')),
(169, 'qi', 1, STRINGDECODE('\u671f')),
(170, 'shang', 4, STRINGDECODE('\u4e0a')),
(171, 'wu', 3, STRINGDECODE('\u5348')),
(172, 'xia', 4, STRINGDECODE('\u4e0b')),
(173, 'ri', 4, STRINGDECODE('\u65e5')),
(174, 'shu', 3, STRINGDECODE('\u5c5e')),
(175, 'ju', 4, STRINGDECODE('\u805a')),
(298, 'hui', 3, STRINGDECODE('\u4f1a')),
(177, 'zhu', 4, STRINGDECODE('\u795d')),
(178, 'he', 4, STRINGDECODE('\u8d3a')),
(179, 'can', 1, STRINGDECODE('\u53c2')),
(180, 'chi', 1, STRINGDECODE('\u5403')),
(181, 'dan', 4, STRINGDECODE('\u86cb')),
(182, 'gao', 1, STRINGDECODE('\u7cd5')),
(183, 'mai', 3, STRINGDECODE('\u4e70')),
(184, 'ping', 2, STRINGDECODE('\u74f6')),
(185, 'hong', 2, STRINGDECODE('\u7ea2')),
(186, 'pu', 2, STRINGDECODE('\u8461')),
(327, 'er', 2, STRINGDECODE('\u513f')),
(188, 'jiu', 3, STRINGDECODE('\u9152')),
(189, 'kuai', 4, STRINGDECODE('\u5feb')),
(355, 'yue', 4, STRINGDECODE('\u4e50')),
(191, 'piao', 4, STRINGDECODE('\u6f02')),
(69, 'xi', 0, STRINGDECODE('\u4e60')),
(193, 'kao', 3, STRINGDECODE('\u70e4')),
(194, 'ya', 1, STRINGDECODE('\u9e2d')),
(195, 'shou', 4, STRINGDECODE('\u5bff')),
(196, 'mian', 1, STRINGDECODE('\u9762')),
(197, 'qu', 4, STRINGDECODE('\u53bb')),
(198, 'ming', 2, STRINGDECODE('\u660e')),
(199, 'zuo', 2, STRINGDECODE('\u6628')),
(200, 'tian', 1, STRINGDECODE('\u5929')),
(201, 'ci', 4, STRINGDECODE('\u6b21')),
(202, 'hui', 2, STRINGDECODE('\u56de')),
(112, 'yi', 2, STRINGDECODE('\u4e00')),
(204, 'ru', 2, STRINGDECODE('\u5982'));
INSERT INTO PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID, PINYIN, TONE, HANZI) VALUES
(205, 'guo', 3, STRINGDECODE('\u679c')),
(206, 'guo', 1, STRINGDECODE('\u9505')),
(207, 'you', 3, STRINGDECODE('\u6709')),
(68, 'me', 0, STRINGDECODE('\u4e48')),
(209, 'wan', 2, STRINGDECODE('\u73a9')),
(210, 'xiu', 1, STRINGDECODE('\u4f11')),
(211, 'xi', 1, STRINGDECODE('\u606f')),
(212, 'yi', 4, STRINGDECODE('\u8bae')),
(213, 'fan', 4, STRINGDECODE('\u996d')),
(214, 'dian', 4, STRINGDECODE('\u5e97')),
(215, 're', 4, STRINGDECODE('\u70ed')),
(216, 'nuan', 3, STRINGDECODE('\u6696')),
(66, 'de', 0, STRINGDECODE('\u7684')),
(218, 'leng', 3, STRINGDECODE('\u51b7')),
(219, 'liang', 2, STRINGDECODE('\u51c9')),
(220, 'zui', 4, STRINGDECODE('\u6700')),
(221, 'jin', 4, STRINGDECODE('\u8fd1')),
(222, 'shen', 1, STRINGDECODE('\u8eab')),
(223, 'ti', 3, STRINGDECODE('\u4f53')),
(224, 'ban', 1, STRINGDECODE('\u73ed')),
(225, 'gao', 4, STRINGDECODE('\u544a')),
(226, 'su', 4, STRINGDECODE('\u8bc9')),
(227, 'tong', 2, STRINGDECODE('\u540c')),
(228, 'yi', 4, STRINGDECODE('\u610f')),
(229, 'shi', 4, STRINGDECODE('\u4e8b')),
(230, 'qing', 2, STRINGDECODE('\u60c5')),
(231, 'zao', 3, STRINGDECODE('\u65e9')),
(232, 'ye', 4, STRINGDECODE('\u591c')),
(233, 'li', 3, STRINGDECODE('\u91cc')),
(234, 'zhu', 4, STRINGDECODE('\u4f4f')),
(235, 'wang', 4, STRINGDECODE('\u5fd8')),
(236, 'dian', 4, STRINGDECODE('\u7535')),
(237, 'hua', 4, STRINGDECODE('\u8bdd')),
(238, 'da', 3, STRINGDECODE('\u6253')),
(239, 'wan', 2, STRINGDECODE('\u5b8c')),
(240, 'guan', 3, STRINGDECODE('\u9986')),
(242, 'san', 1, STRINGDECODE('\u4e09')),
(243, 'wu', 3, STRINGDECODE('\u4e94')),
(244, 'liu', 4, STRINGDECODE('\u516d')),
(245, 'qi', 1, STRINGDECODE('\u4e03')),
(246, 'ba', 1, STRINGDECODE('\u516b')),
(248, 'jiu', 3, STRINGDECODE('\u4e5d')),
(249, 'shi', 2, STRINGDECODE('\u5341')),
(250, 'qian', 1, STRINGDECODE('\u5343')),
(251, 'wan', 4, STRINGDECODE('\u4e07')),
(252, 'zhi', 3, STRINGDECODE('\u53ea')),
(253, 'ji', 3, STRINGDECODE('\u5df1')),
(254, 'fu', 4, STRINGDECODE('\u7236')),
(255, 'mu', 3, STRINGDECODE('\u6bcd')),
(256, 'yin', 1, STRINGDECODE('\u56e0')),
(257, 'wei', 2, STRINGDECODE('\u4e3a')),
(258, 'suo', 3, STRINGDECODE('\u6240')),
(259, 'pian', 2, STRINGDECODE('\u4fbf')),
(260, 'yi', 4, STRINGDECODE('\u5b9c')),
(261, 'chuang', 2, STRINGDECODE('\u5e8a')),
(262, 'shi', 4, STRINGDECODE('\u5e02')),
(263, 'shang', 1, STRINGDECODE('\u5546')),
(265, 'du', 3, STRINGDECODE('\u5835')),
(332, 'xi', 0, STRINGDECODE('\u897f')),
(267, 'jia', 3, STRINGDECODE('\u5047')),
(268, 'guang', 1, STRINGDECODE('\u5149')),
(269, 'pan', 2, STRINGDECODE('\u76d8')),
(354, 'yin', 1, STRINGDECODE('\u97f3')),
(271, 'gen', 1, STRINGDECODE('\u8ddf')),
(272, 'ming', 2, STRINGDECODE('\u540d')),
(273, 'shu', 1, STRINGDECODE('\u4e66')),
(274, 'ben', 3, STRINGDECODE('\u672c')),
(48, 'shi', 0, STRINGDECODE('\u8bc6')),
(44, 'nai', 3, STRINGDECODE('\u5976')),
(277, 'xiang', 1, STRINGDECODE('\u9999')),
(278, 'jiao', 1, STRINGDECODE('\u8549')),
(279, 'ping', 2, STRINGDECODE('\u82f9')),
(280, 'zen', 3, STRINGDECODE('\u600e')),
(281, 'rong', 2, STRINGDECODE('\u5bb9')),
(282, 'yi', 4, STRINGDECODE('\u6613')),
(283, 'qian', 2, STRINGDECODE('\u94b1')),
(284, 'jin', 1, STRINGDECODE('\u65a4')),
(285, 'kuai', 4, STRINGDECODE('\u5757')),
(286, 'mao', 2, STRINGDECODE('\u6bdb')),
(287, 'song', 4, STRINGDECODE('\u9001')),
(288, 'gei', 3, STRINGDECODE('\u7ed9')),
(289, 'zhao', 3, STRINGDECODE('\u627e')),
(290, 'ban', 4, STRINGDECODE('\u534a')),
(292, 'ling', 4, STRINGDECODE('\u53e6')),
(293, 'fu', 4, STRINGDECODE('\u4ed8')),
(294, 'fei', 4, STRINGDECODE('\u8d39')),
(295, 'hua', 1, STRINGDECODE('\u82b1')),
(296, 'mian', 3, STRINGDECODE('\u514d')),
(297, 'neng', 2, STRINGDECODE('\u80fd')),
(176, 'hui', 4, STRINGDECODE('\u4f1a')),
(299, 'deng', 3, STRINGDECODE('\u7b49')),
(300, 'si', 1, STRINGDECODE('\u53f8')),
(301, 'yang', 4, STRINGDECODE('\u6837')),
(302, 'dan', 4, STRINGDECODE('\u4f46')),
(303, 'huo', 4, STRINGDECODE('\u6216')),
(304, 'qian', 2, STRINGDECODE('\u524d')),
(305, 'hou', 4, STRINGDECODE('\u540e')),
(306, 'bian', 1, STRINGDECODE('\u8fb9'));               
INSERT INTO PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID, PINYIN, TONE, HANZI) VALUES
(307, 'zuo', 3, STRINGDECODE('\u5de6')),
(308, 'you', 4, STRINGDECODE('\u53f3')),
(25, 'di', 4, STRINGDECODE('\u5f1f')),
(310, 'pao', 3, STRINGDECODE('\u8dd1')),
(311, 'bu', 4, STRINGDECODE('\u6b65')),
(312, 'man', 4, STRINGDECODE('\u6162')),
(313, 'ying', 1, STRINGDECODE('\u5e94')),
(314, 'gai', 1, STRINGDECODE('\u8be5')),
(315, 'xu', 4, STRINGDECODE('\u9700')),
(316, 'huan', 4, STRINGDECODE('\u6362')),
(317, 'jue', 2, STRINGDECODE('\u89c9')),
(20, 'ge', 1, STRINGDECODE('\u54e5')),
(319, 'bie', 2, STRINGDECODE('\u522b')),
(320, 'yi', 1, STRINGDECODE('\u8863')),
(402, 'fu', 0, STRINGDECODE('\u670d')),
(322, 'fang', 1, STRINGDECODE('\u65b9')),
(323, 'cha', 4, STRINGDECODE('\u5dee')),
(324, 'ke', 4, STRINGDECODE('\u523b')),
(325, 'sun', 1, STRINGDECODE('\u5b59')),
(19, 'you', 0, STRINGDECODE('\u53cb')),
(79, 'er', 0, STRINGDECODE('\u513f')),
(14, 'men', 0, STRINGDECODE('\u4eec')),
(328, 'shu', 0, STRINGDECODE('\u6570')),
(330, 'bai', 2, STRINGDECODE('\u62dc')),
(331, 'dong', 1, STRINGDECODE('\u4e1c')),
(11, 'ma', 1, STRINGDECODE('\u5988')),
(333, 'xie', 3, STRINGDECODE('\u5199')),
(9, 'ba', 4, STRINGDECODE('\u7238')),
(335, 'du', 4, STRINGDECODE('\u5ea6')),
(336, 'jiu', 3, STRINGDECODE('\u4e45')),
(337, 'yuan', 3, STRINGDECODE('\u8fdc')),
(338, 'ting', 1, STRINGDECODE('\u542c')),
(339, 'shuo', 1, STRINGDECODE('\u8bf4')),
(340, 'liao', 2, STRINGDECODE('\u804a')),
(341, 'shi', 4, STRINGDECODE('\u8bd5')),
(342, 'cai', 4, STRINGDECODE('\u83dc')),
(343, 'dan', 1, STRINGDECODE('\u5355')),
(344, 'wu', 4, STRINGDECODE('\u52a1')),
(345, 'yuan', 2, STRINGDECODE('\u5458')),
(346, 'yao', 1, STRINGDECODE('\u9080')),
(347, 'ke', 4, STRINGDECODE('\u5ba2')),
(348, 'xin', 1, STRINGDECODE('\u65b0')),
(349, 'jiu', 4, STRINGDECODE('\u65e7')),
(350, 'xin', 1, STRINGDECODE('\u5fc3')),
(351, 'kai', 1, STRINGDECODE('\u5f00')),
(353, 'deng', 1, STRINGDECODE('\u706f')),
(356, 'le', 4, STRINGDECODE('\u4e50')),
(357, 'cha', 2, STRINGDECODE('\u8336')),
(358, 'ye', 4, STRINGDECODE('\u53f6')),
(359, 'duan', 3, STRINGDECODE('\u77ed')),
(360, 'xiang', 3, STRINGDECODE('\u60f3')),
(361, 'san', 4, STRINGDECODE('\u6563')),
(362, 'qin', 1, STRINGDECODE('\u4eb2')),
(363, 'wo', 4, STRINGDECODE('\u63e1')),
(364, 'li', 2, STRINGDECODE('\u79bb')),
(365, 'shui', 3, STRINGDECODE('\u6c34')),
(366, 'shu', 1, STRINGDECODE('\u852c')),
(367, 'rou', 4, STRINGDECODE('\u8089')),
(368, 'jing', 3, STRINGDECODE('\u666f')),
(369, 'se', 4, STRINGDECODE('\u8272')),
(370, 'ji', 2, STRINGDECODE('\u7ea7')),
(6, 'ma', 0, STRINGDECODE('\u5417')),
(372, 'dong', 3, STRINGDECODE('\u61c2')),
(373, 'chang', 4, STRINGDECODE('\u5531')),
(374, 'ge', 1, STRINGDECODE('\u6b4c')),
(375, 'geng', 4, STRINGDECODE('\u66f4')),
(376, 'guo', 4, STRINGDECODE('\u8fc7')),
(377, 'di', 4, STRINGDECODE('\u7b2c')),
(378, 'fang', 2, STRINGDECODE('\u623f')),
(379, 'ju', 4, STRINGDECODE('\u5177')),
(380, 'zi', 1, STRINGDECODE('\u8d44')),
(381, 'chang', 3, STRINGDECODE('\u5382')),
(382, 'ji', 1, STRINGDECODE('\u9e21')),
(383, 'niu', 2, STRINGDECODE('\u725b')),
(384, 'suan', 1, STRINGDECODE('\u9178')),
(385, 'zhi', 1, STRINGDECODE('\u6c41')),
(386, 'pi', 2, STRINGDECODE('\u5564')),
(387, 'yue', 1, STRINGDECODE('\u7ea6')),
(388, 'zhu', 3, STRINGDECODE('\u4e3b')),
(389, 'suan', 4, STRINGDECODE('\u7b97')),
(390, 'zhou', 1, STRINGDECODE('\u5468')),
(391, 'mo', 4, STRINGDECODE('\u672b')),
(392, 'cheng', 2, STRINGDECODE('\u7a0b')),
(393, 'si', 1, STRINGDECODE('\u601d')),
(394, 'yuan', 2, STRINGDECODE('\u5143')),
(395, 'ou', 1, STRINGDECODE('\u6b27')),
(396, 'zhi', 1, STRINGDECODE('\u4e4b')),
(397, 'cuo', 4, STRINGDECODE('\u9519')),
(398, 'zhang', 3, STRINGDECODE('\u6da8')),
(399, 'wen', 2, STRINGDECODE('\u6587')),
(400, 'quan', 2, STRINGDECODE('\u5168')),
(401, 'shu', 1, STRINGDECODE('\u8212')),
(4, 'ne', 0, STRINGDECODE('\u5462')),
(403, 'duan', 1, STRINGDECODE('\u953b')),
(404, 'lian', 4, STRINGDECODE('\u70bc')),
(405, 'tou', 2, STRINGDECODE('\u5934')),
(406, 'teng', 2, STRINGDECODE('\u75bc')),
(454, 'sang', 3, STRINGDECODE('\u55d3')),
(408, 'kan', 4, STRINGDECODE('\u770b'));       
INSERT INTO PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID, PINYIN, TONE, HANZI) VALUES
(409, 'bing', 4, STRINGDECODE('\u75c5')),
(410, 'chuan', 1, STRINGDECODE('\u7a7f')),
(411, 'fa', 1, STRINGDECODE('\u53d1')),
(412, 'yan', 2, STRINGDECODE('\u708e')),
(413, 'shao', 1, STRINGDECODE('\u70e7')),
(414, 'gan', 3, STRINGDECODE('\u611f')),
(415, 'mao', 4, STRINGDECODE('\u5192')),
(416, 'yao', 4, STRINGDECODE('\u836f')),
(417, 'yuan', 4, STRINGDECODE('\u613f')),
(418, 'bei', 3, STRINGDECODE('\u5317')),
(419, 'nan', 2, STRINGDECODE('\u5357')),
(420, 'xiu', 1, STRINGDECODE('\u4fee')),
(421, 'bang', 1, STRINGDECODE('\u5e2e')),
(422, 'huai', 4, STRINGDECODE('\u574f')),
(423, 'ruan', 3, STRINGDECODE('\u8f6f')),
(424, 'jian', 4, STRINGDECODE('\u4ef6')),
(425, 'ying', 4, STRINGDECODE('\u786c')),
(426, 'zhong', 4, STRINGDECODE('\u91cd')),
(427, 'xi', 1, STRINGDECODE('\u5e0c')),
(428, 'wang', 4, STRINGDECODE('\u671b')),
(429, 'xiang', 4, STRINGDECODE('\u76f8')),
(430, 'ting', 2, STRINGDECODE('\u505c')),
(431, 'zhi', 3, STRINGDECODE('\u6b62')),
(432, 'dai', 4, STRINGDECODE('\u5e26')),
(433, 'hu', 4, STRINGDECODE('\u62a4')),
(434, 'qian', 1, STRINGDECODE('\u7b7e')),
(435, 'zheng', 4, STRINGDECODE('\u8bc1')),
(436, 'kong', 1, STRINGDECODE('\u7a7a')),
(437, 'bao', 1, STRINGDECODE('\u5305')),
(438, 'li', 3, STRINGDECODE('\u674e')),
(439, 'pa', 2, STRINGDECODE('\u722c')),
(440, 'zhuo', 1, STRINGDECODE('\u684c')),
(441, 'kun', 4, STRINGDECODE('\u56f0')),
(442, 'gang', 1, STRINGDECODE('\u521a')),
(443, 'cai', 2, STRINGDECODE('\u624d')),
(444, 'dai', 1, STRINGDECODE('\u5446')),
(318, 'de', 0, STRINGDECODE('\u5f97')),
(446, 'zong', 3, STRINGDECODE('\u603b')),
(452, 'zhi', 2, STRINGDECODE('\u76f4')),
(448, 'zu', 2, STRINGDECODE('\u8db3')),
(449, 'qiu', 2, STRINGDECODE('\u7403')),
(450, 'bi', 3, STRINGDECODE('\u6bd4')),
(451, 'sai', 4, STRINGDECODE('\u8d5b')),
(453, 'jing', 1, STRINGDECODE('\u4eac'));               
CREATE FORCE VIEW PUBLIC.ENGLISH_PINYIN_CHINESE(CWORD_ID, HANZI, PINYIN, TRANSLATIONS) AS
SELECT C_WORDS.CWORD_ID, C_WORDS.HANZI, C_WORDS.PINYIN, GROUP_CONCAT(E.TRANSLATION SEPARATOR ', ') AS TRANSLATIONS
FROM PUBLIC.ENGLISH E /* PUBLIC.CONSTRAINT_CB_INDEX_C */
INNER JOIN (SELECT CPB.CWORD_ID, GROUP_CONCAT(CP.HANZI ORDER BY CPB.POS SEPARATOR '') AS HANZI, GROUP_CONCAT(CONCAT(CP.PINYIN, CP.TONE) ORDER BY CPB.POS SEPARATOR '') AS PINYIN
FROM PUBLIC.CWORD_PINYIN_BRIDGE CPB /* PUBLIC.CONSTRAINT_80_INDEX_8 */
INNER JOIN PUBLIC.CWORD CW /* PUBLIC.PRIMARY_KEY_3D: CWORD_ID = CPB.CWORD_ID */ ON 1=1 /* WHERE CPB.CWORD_ID = CW.CWORD_ID */
INNER JOIN PUBLIC.CHARACTER_PINYIN CP /* PUBLIC.CONSTRAINT_808_INDEX_1: CHARACTER_PINYIN_ID = CPB.CHARACTER_PINYIN_ID */ ON 1=1
WHERE (CP.CHARACTER_PINYIN_ID = CPB.CHARACTER_PINYIN_ID) AND (CPB.CWORD_ID = CW.CWORD_ID)
GROUP BY CPB.CWORD_ID
/* group sorted */) C_WORDS /* SELECT CPB.CWORD_ID, GROUP_CONCAT(CP.HANZI ORDER BY CPB.POS SEPARATOR '') AS HANZI, GROUP_CONCAT(CONCAT(CP.PINYIN, CP.TONE) ORDER BY CPB.POS SEPARATOR '') AS PINYIN
FROM PUBLIC.CWORD_PINYIN_BRIDGE CPB /++ PUBLIC.CONSTRAINT_80_INDEX_8: CWORD_ID = ?1 ++/ /++ WHERE CPB.CWORD_ID = ?1 ++/
INNER JOIN PUBLIC.CWORD CW /++ PUBLIC.PRIMARY_KEY_3D: CWORD_ID = CPB.CWORD_ID ++/ ON 1=1 /++ WHERE CPB.CWORD_ID = CW.CWORD_ID ++/
INNER JOIN PUBLIC.CHARACTER_PINYIN CP /++ PUBLIC.CONSTRAINT_808_INDEX_1: CHARACTER_PINYIN_ID = CPB.CHARACTER_PINYIN_ID ++/ ON 1=1
WHERE (CPB.CWORD_ID = ?1) AND ((CP.CHARACTER_PINYIN_ID = CPB.CHARACTER_PINYIN_ID) AND (CPB.CWORD_ID = CW.CWORD_ID))
GROUP BY CPB.CWORD_ID
/++ group sorted ++/: CWORD_ID = E.CWORD_ID */ ON 1=1
WHERE E.CWORD_ID = C_WORDS.CWORD_ID
GROUP BY E.CWORD_ID
/* group sorted */;        
ALTER TABLE PUBLIC.CWORD_PINYIN_BRIDGE ADD CONSTRAINT PUBLIC.CONSTRAINT_808 FOREIGN KEY(CHARACTER_PINYIN_ID) REFERENCES PUBLIC.CHARACTER_PINYIN(CHARACTER_PINYIN_ID) NOCHECK;  
ALTER TABLE PUBLIC.ENGLISH ADD CONSTRAINT PUBLIC.CONSTRAINT_CB FOREIGN KEY(CWORD_ID) REFERENCES PUBLIC.CWORD(CWORD_ID) NOCHECK;
ALTER TABLE PUBLIC.CWORD_SCORE ADD CONSTRAINT PUBLIC.CONSTRAINT_B FOREIGN KEY(CWORD_ID) REFERENCES PUBLIC.CWORD(CWORD_ID) NOCHECK;             
ALTER TABLE PUBLIC.CWORD_PINYIN_BRIDGE ADD CONSTRAINT PUBLIC.CONSTRAINT_80 FOREIGN KEY(CWORD_ID) REFERENCES PUBLIC.CWORD(CWORD_ID) NOCHECK;    
